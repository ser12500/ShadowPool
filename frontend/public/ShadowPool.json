{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_verifier",
                    "type": "address",
                    "internalType": "contract IVerifier"
                },
                {
                    "name": "_hasher",
                    "type": "address",
                    "internalType": "contract Poseidon2"
                },
                {
                    "name": "_merkleTreeDepth",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "_daoAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_percentageFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_fixedFee",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "BASIS_POINTS",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "FIELD_SIZE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "HIGH_ANONYMITY_THRESHOLD",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "LONG_WAIT_TIME",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "LOW_ANONYMITY_THRESHOLD",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAXIMUM_PERCENTAGE_FEE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MAX_MERKLE_TREE_DEPTH",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MEDIUM_ANONYMITY_THRESHOLD",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "MEDIUM_POOL_THRESHOLD",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PERCENTAGE_MULTIPLIER",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PUBLIC_INPUTS_AMOUNTS_OFFSET",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PUBLIC_INPUTS_GROUP_SIZE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PUBLIC_INPUTS_SIZE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "PUBLIC_INPUTS_TOKENS_OFFSET",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "REVEAL_DELAY",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "ROOT_HISTORY_SIZE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "SHORT_WAIT_TIME",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "SMALL_POOL_THRESHOLD",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "ZERO_ELEMENT",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "calculateFee",
            "inputs": [
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "commit",
            "inputs": [
                {
                    "name": "_commitmentHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "daoAddress",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "deposit",
            "inputs": [
                {
                    "name": "_commitment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "fixedFee",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "generateCommitment",
            "inputs": [
                {
                    "name": "_token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_nullifier",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_secret",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getAnonymityLevel",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getBalance",
            "inputs": [
                {
                    "name": "_token",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getFeeBreakdown",
            "inputs": [
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "percentageFeeAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "fixedFeeAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "totalFee",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getLatestRoot",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getMaxPoolSize",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getOptimalWithdrawTime",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getPoolSize",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getPoolStats",
            "inputs": [],
            "outputs": [
                {
                    "name": "totalDeposits",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "currentRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "currentPercentageFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "currentFixedFee",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getPoolUtilization",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "hashLeftRight",
            "inputs": [
                {
                    "name": "_left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "i_depth",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "i_hasher",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract Poseidon2"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "i_verifier",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IVerifier"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isDepositValid",
            "inputs": [
                {
                    "name": "_commitment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isKnownRoot",
            "inputs": [
                {
                    "name": "_root",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isPoolFull",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "multiDeposit",
            "inputs": [
                {
                    "name": "_deposits",
                    "type": "tuple[]",
                    "internalType": "struct ShadowPool.Deposit[]",
                    "components": [
                        {
                            "name": "token",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "commitment",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "percentageFee",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "reveal",
            "inputs": [
                {
                    "name": "_nullifier",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_secret",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "s_cachedSubtrees",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_commitments",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_currentRootIndex",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_nextLeafIndex",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_nullifiers",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_pendingCommitments",
            "inputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "s_roots",
            "inputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "updateDAOAddress",
            "inputs": [
                {
                    "name": "_newDAOAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "updateFees",
            "inputs": [
                {
                    "name": "_percentageFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_fixedFee",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "withdraw",
            "inputs": [
                {
                    "name": "_proof",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_root",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_nullifierHashes",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "_recipient",
                    "type": "address",
                    "internalType": "address payable"
                },
                {
                    "name": "_tokens",
                    "type": "address[]",
                    "internalType": "address[]"
                },
                {
                    "name": "_amounts",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "zeros",
            "inputs": [
                {
                    "name": "i",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "event",
            "name": "CommitmentSubmitted",
            "inputs": [
                {
                    "name": "commitment",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "user",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DAOUpdated",
            "inputs": [
                {
                    "name": "oldDAO",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newDAO",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "FeeCollected",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "FeeUpdated",
            "inputs": [
                {
                    "name": "percentageFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "fixedFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "MultiDeposit",
            "inputs": [
                {
                    "name": "commitments",
                    "type": "bytes32[]",
                    "indexed": false,
                    "internalType": "bytes32[]"
                },
                {
                    "name": "leafIndices",
                    "type": "uint32[]",
                    "indexed": false,
                    "internalType": "uint32[]"
                },
                {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SingleDeposit",
            "inputs": [
                {
                    "name": "commitment",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "leafIndex",
                    "type": "uint32",
                    "indexed": false,
                    "internalType": "uint32"
                },
                {
                    "name": "timestamp",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Withdrawal",
            "inputs": [
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "nullifierHashes",
                    "type": "bytes32[]",
                    "indexed": false,
                    "internalType": "bytes32[]"
                },
                {
                    "name": "tokens",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                },
                {
                    "name": "amounts",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__IndexOutOfBounds",
            "inputs": [
                {
                    "name": "index",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__LeftValueOutOfRange",
            "inputs": [
                {
                    "name": "left",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__LevelsShouldBeGreaterThanZero",
            "inputs": [
                {
                    "name": "depth",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ]
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__LevelsShouldBeLessThan32",
            "inputs": [
                {
                    "name": "depth",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ]
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__MerkleTreeFull",
            "inputs": [
                {
                    "name": "nextIndex",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ]
        },
        {
            "type": "error",
            "name": "IncrementalMerkleTree__RightValueOutOfRange",
            "inputs": [
                {
                    "name": "right",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__ArrayLengthMismatch",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__CommitmentAlreadyAdded",
            "inputs": [
                {
                    "name": "commitment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__DepositValueMismatch",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__FeeExceedsDepositValue",
            "inputs": [
                {
                    "name": "expected",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "actual",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__InvalidAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Mixer__InvalidWithdrawProof",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Mixer__NotDAO",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Mixer__NoteAlreadySpent",
            "inputs": [
                {
                    "name": "nullifierHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__PaymentFailed",
            "inputs": [
                {
                    "name": "recipient",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__PercentageFeeTooHigh",
            "inputs": [
                {
                    "name": "maxAllowed",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "provided",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ]
        },
        {
            "type": "error",
            "name": "Mixer__UnknownRoot",
            "inputs": [
                {
                    "name": "root",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "ReentrancyGuardReentrantCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "SafeERC20FailedOperation",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        }
    ],
    "bytecode": {
        "object": "0x60e0604052600380546001600160401b031916905534801561001f575f5ffd5b5060405161441238038061441283398101604081905261003e916107a2565b838560015f819055508163ffffffff165f0361007a576040516356b2109160e11b815263ffffffff831660048201526024015b60405180910390fd5b601f63ffffffff8316106100a9576040516379671ced60e01b815263ffffffff83166004820152602401610071565b63ffffffff821660a08190526001600160a01b0382166080526100cb9061018f565b5f805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b5550506001600160a01b0383166101585760405162461bcd60e51b815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f206164647265604482015261737360f01b6064820152608401610071565b6001600160a01b0395861660c052600680546001600160a01b03191693909616929092179094556004939093555050600555610819565b5f815f036101be57507f034f996155f0d9b1a838977011b06a385e8701d10aae926876c9c8a6fa69bf18919050565b816001036101ed57507f2a06a72b1f2b24364e5e4120849b4692bbf91c4bcad66845a399e67022e9f0d9919050565b8160020361021c57507f059c8070788f7308bbda9246ef2d321ad1bf81cda0edfe01399652ff34c53da4919050565b8160030361024b57507f27d1ecbd5115efbbda09f8d68eaeabd0a9f28debb8f211c85234ac5bb3f332c2919050565b8160040361027a57507f1b4fbca11bb4821fc5f3264debc386ff9b7081458ca4725ba5386b1774f665e4919050565b816005036102a957507f189af983b17956b1997302f93059af4d2414a2d19deea6743e8484e3e9213b9d919050565b816006036102d857507f2d61566878b72076d8ccf4bb2211272cd24b352b27285088383c85b4ea19180c919050565b8160070361030757507f16c3503aebf8d918c9771d683e335b2a62547fb8e86e5d0d6cb898c14fb5d396919050565b8160080361033657507f1a5de8d583ecaaa9e3d684145c0410976a66ce979f7e92cd5c0fdbaa2ac1af5a919050565b8160090361036557507f28e3f0b5fd188614cf8c2825ba0263ed70153e1a453f0662baedaeab12a66ef8919050565b81600a0361039457507f16b671eb844a8e4e463e820e26560357edee4ecfdbf5d7b0a28799911505088d919050565b81600b036103c357507f115ea0c2f132c5914d5bb737af6eed04115a3896f0d65e12e761ca560083da15919050565b81600c036103f257507f139a5b42099806c76efb52da0ec1dde06a836bf6f87ef7ab4bac7d00637e28f0919050565b81600d0361042157507f0804853482335a6533eb6a4ddfc215a08026db413d247a7695e807e38debea8e919050565b81600e0361045057507f2f0b264ab5f5630b591af93d93ec2dfed28eef017b251e40905cdf7983689803919050565b81600f0361047f57507f170fc161bf1b9610bf196c173bdae82c4adfd93888dc317f5010822a3ba9ebee919050565b816010036104ae57507f0b2e7665b17622cc0243b6fa35110aa7dd0ee3cc9409650172aa786ca5971439919050565b816011036104dd57507f12d5a033cbeff854c5ba0c5628ac4628104be6ab370699a1b2b4209e518b0ac5919050565b8160120361050c57507f1bc59846eb7eafafc85ba9a99a89562763735322e4255b7c1788a8fe8b90bf5d919050565b8160130361053b57507f1b9421fbd79f6972a348a3dd4721781ec25a5d8d27342942ae00aba80a3904d4919050565b8160140361056a57507f087fde1c4c9c27c347f347083139eee8759179d255ec8381c02298d3d6ccd233919050565b8160150361059957507f1e26b1884cb500b5e6bbfdeedbdca34b961caf3fa9839ea794bfc7f87d10b3f1919050565b816016036105c857507f09fc1a538b88bda55a53253c62c153e67e8289729afd9b8bfd3f46f5eecd5a72919050565b816017036105f757507f14cd0edec3423652211db5210475a230ca4771cd1e45315bcd6ea640f14077e2919050565b8160180361062657507f1d776a76bc76f4305ef0b0b27a58a9565864fe1b9f2a198e8247b3e599e036ca919050565b8160190361065557507f1f93e3103fed2d3bd056c3ac49b4a0728578be33595959788fa25514cdb5d42f919050565b81601a0361068457507f138b0576ee7346fb3f6cfb632f92ae206395824b9333a183c15470404c977a3b919050565b81601b036106b357507f0745de8522abfcd24bd50875865592f73a190070b4cb3d8976e3dbff8fdb7f3d919050565b81601c036106e257507f2ffb8c798b9dd2645e9187858cb92a86c86dcd1138f5d610c33df2696f5f6860919050565b81601d0361071157507f2612a1395168260c9999287df0e3c3f1b0d8e008e90cd15941e4c2df08a68a5a919050565b81601e0361074057507f10ebedce66a910039c8edb2cd832d6a9857648ccff5e99b5d08009b44b088edf919050565b81601f0361076f57507f213fb841f9de06958cf4403477bdbff7c59d6249daabfee147f853db7c808082919050565b604051630edbc04760e31b815260048101839052602401610071565b6001600160a01b038116811461079f575f5ffd5b50565b5f5f5f5f5f5f60c087890312156107b7575f5ffd5b86516107c28161078b565b60208801519096506107d38161078b565b604088015190955063ffffffff811681146107ec575f5ffd5b60608801519094506107fd8161078b565b608088015160a090980151969995985093969395939492505050565b60805160a05160c051613b9e6108745f395f8181610940015261175101525f818161064801528181610a6c01528181610ab001528181611d680152818161297a01526129f401525f81816106150152610b9e0152613b9e5ff3fe608060405260043610610350575f3560e01c80637d57287a116101bd578063c3a2ade6116100f2578063e829558811610092578063f14fcbc81161006d578063f14fcbc814610a01578063f20d749514610a14578063f8b2cb4f14610a28578063fa9b468914610a47575f5ffd5b8063e82955881461098c578063ed7cf2df146109ab578063ee594ca4146109d6575f5ffd5b8063d3f34ff1116100cd578063d3f34ff114610910578063db9753a01461092f578063dc79c2eb14610962578063e1f1c4a714610977575f5ffd5b8063c3a2ade6146104f7578063cd87a3b4146108e8578063d0a1db84146108fc575f5ffd5b8063a305c4971161015d578063af28f7e811610138578063af28f7e81461039f578063b214faa51461088d578063bbb85188146108a0578063bf7d653b146108d4575f5ffd5b8063a305c4971461081f578063a7bc4e301461083e578063aac78c8414610853575f5ffd5b806399a5d7471161019857806399a5d747146107795780639c8b91c1146107985780639dc166b7146107c3578063a20a941e146107f1575f5ffd5b80637d57287a146106b4578063871211df1461073157806391792d5b14610764575f5ffd5b806354111315116102935780636d9833e31161023357806373d732021161020e57806373d7320214610637578063780a7ff01461066a578063783e558f1461067f5780637d40f6d514610693575f5ffd5b80636d9833e3146105c65780636db79437146105e5578063705f032f14610604575f5ffd5b806357f657061161026e57806357f657061461054857806359f41a81146105795780635e85407e1461059d578063684d329c146105b1575f5ffd5b806354111315146104f75780635445b0071461050b5780635580ee3a14610533575f5ffd5b80632131c68c116102fe57806338bf282e116102d957806338bf282e14610477578063414a37ba1461049657806350453f28146104c95780635296bffd14610463575f5ffd5b80632131c68c146103f057806323845e4b1461044157806337dbd12014610463575f5ffd5b8063145f9e2f1161032e578063145f9e2f146103b35780631ba15650146103c85780631d06a3cd146103dc575f5ffd5b8063093c87f3146103545780630fbc8f5b1461037d578063132d62751461039f575b5f5ffd5b34801561035f575f5ffd5b50610368610a66565b60405190151581526020015b60405180910390f35b348015610388575f5ffd5b50610391610aaa565b604051908152602001610374565b3480156103aa575f5ffd5b50610391600a81565b3480156103be575f5ffd5b5061039161070881565b3480156103d3575f5ffd5b50610391601481565b3480156103e7575f5ffd5b50610391600881565b3480156103fb575f5ffd5b5060065461041c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610374565b34801561044c575f5ffd5b50600354640100000000900463ffffffff16610391565b34801561046e575f5ffd5b50610391603281565b348015610482575f5ffd5b5061039161049136600461329f565b610adb565b3480156104a1575f5ffd5b506103917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b3480156104d4575f5ffd5b506103686104e33660046132bf565b5f9081526008602052604090205460ff1690565b348015610502575f5ffd5b50610391606481565b348015610516575f5ffd5b5060035463ffffffff165f90815260026020526040902054610391565b34801561053e575f5ffd5b50610391610e1081565b348015610553575f5ffd5b506003546105649063ffffffff1681565b60405163ffffffff9091168152602001610374565b348015610584575f5ffd5b5060035461056490640100000000900463ffffffff1681565b3480156105a8575f5ffd5b50610391610c71565b6105c46105bf3660046132d6565b610caf565b005b3480156105d1575f5ffd5b506103686105e03660046132bf565b6112d6565b3480156105f0575f5ffd5b506105c46105ff36600461329f565b61134d565b34801561060f575f5ffd5b5061041c7f000000000000000000000000000000000000000000000000000000000000000081565b348015610642575f5ffd5b506105647f000000000000000000000000000000000000000000000000000000000000000081565b348015610675575f5ffd5b5061039160045481565b34801561068a575f5ffd5b50610391600381565b34801561069e575f5ffd5b506106a761142c565b6040516103749190613347565b3480156106bf575f5ffd5b506103916106ce3660046133bb565b60408051602080820194909452808201929092527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b169482019490945260748082019390935283518082039093018352609401909252805191012090565b34801561073c575f5ffd5b506103917f034f996155f0d9b1a838977011b06a385e8701d10aae926876c9c8a6fa69bf1881565b34801561076f575f5ffd5b5061039160055481565b348015610784575f5ffd5b506103916107933660046132bf565b61153f565b3480156107a3575f5ffd5b506103916107b23660046132bf565b60026020525f908152604090205481565b3480156107ce575f5ffd5b506103686107dd3660046132bf565b60086020525f908152604090205460ff1681565b3480156107fc575f5ffd5b5061036861080b3660046132bf565b60076020525f908152604090205460ff1681565b34801561082a575f5ffd5b506105c4610839366004613484565b611573565b348015610849575f5ffd5b5061039161012c81565b34801561085e575f5ffd5b5061087261086d3660046132bf565b6119f5565b60408051938452602084019290925290820152606001610374565b6105c461089b3660046132bf565b611a2d565b3480156108ab575f5ffd5b506108b4611d1d565b604080519485526020850193909352918301526060820152608001610374565b3480156108df575f5ffd5b50610391611d61565b3480156108f3575f5ffd5b50610564601e81565b348015610907575f5ffd5b50610564601f81565b34801561091b575f5ffd5b506105c461092a36600461356f565b611dc0565b34801561093a575f5ffd5b5061041c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561096d575f5ffd5b506103916101f481565b348015610982575f5ffd5b5061039161271081565b348015610997575f5ffd5b506103916109a63660046132bf565b611ed4565b3480156109b6575f5ffd5b506103916109c53660046132bf565b60016020525f908152604090205481565b3480156109e1575f5ffd5b506103916109f03660046132bf565b60096020525f908152604090205481565b6105c4610a0f3660046132bf565b6124ee565b348015610a1f575f5ffd5b50610391600581565b348015610a33575f5ffd5b50610391610a4236600461356f565b61261d565b348015610a52575f5ffd5b506105c4610a6136600461358a565b6126cc565b5f610a927f000000000000000000000000000000000000000000000000000000000000000060026137cc565b600354640100000000900463ffffffff161015919050565b5f610ad67f000000000000000000000000000000000000000000000000000000000000000060026137cc565b905090565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310610b3d576040517f8636b86a000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610b99576040517f51da4a5b00000000000000000000000000000000000000000000000000000000815260048101839052602401610b34565b610c687f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663055d8d54610be186612845565b610bea86612845565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401602060405180830381865afa158015610c41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6591906137dd565b90565b90505b92915050565b6003545f90640100000000900463ffffffff166014811015610c9657610e1091505090565b6032811015610ca85761070891505090565b5f91505090565b610cb761284f565b5f808267ffffffffffffffff811115610cd257610cd26137f4565b604051908082528060200260200182016040528015610cfb578160200160208202803683370190505b5090505f8367ffffffffffffffff811115610d1857610d186137f4565b604051908082528060200260200182016040528015610d41578160200160208202803683370190505b5090505f5b84811015610ff45736868683818110610d6157610d61613821565b606002919091016040818101355f9081526008602052205490925060ff16159050610dbe57604080517f248aad93000000000000000000000000000000000000000000000000000000008152908201356004820152602401610b34565b5f6127106004548360200135610dd4919061384e565b610dde9190613892565b90505f60055482610def91906138a5565b905080836020013511610e3b576040517ff6e0f2e20000000000000000000000000000000000000000000000000000000081526020840135600482015260248101829052604401610b34565b5f610e49602085018561356f565b73ffffffffffffffffffffffffffffffffffffffff1603610e7957610e726020840135886138a5565b9650610f58565b610ead333060208601803590610e8f908861356f565b73ffffffffffffffffffffffffffffffffffffffff16929190612890565b8015610f5857600654610efb9073ffffffffffffffffffffffffffffffffffffffff1682610ede602087018761356f565b73ffffffffffffffffffffffffffffffffffffffff16919061291f565b610f08602084018461356f565b73ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df82604051610f4f91815260200190565b60405180910390a25b6040808401355f81815260086020529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558651879086908110610fa857610fa8613821565b602002602001018181525050610fc18360400135612962565b858581518110610fd357610fd3613821565b63ffffffff9290921660209283029190910190910152505050600101610d46565b50348314611037576040517f0aa30c9c00000000000000000000000000000000000000000000000000000000815260048101849052346024820152604401610b34565b5f5b8481101561128a573686868381811061105457611054613821565b6060029190910191505f905061106d602083018361356f565b73ffffffffffffffffffffffffffffffffffffffff1603611281575f612710600454836020013561109e919061384e565b6110a89190613892565b90505f600554826110b991906138a5565b9050801561127e5760065473ffffffffffffffffffffffffffffffffffffffff16611166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d805f81146111bd576040519150601f19603f3d011682016040523d82523d5f602084013e6111c2565b606091505b5050905080611220576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101839052604401610b34565b61122d602085018561356f565b73ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df8360405161127491815260200190565b60405180910390a2505b50505b50600101611039565b507fe9cab51270aeafd33a836fd81eb860b78f628a22134783bb478e9222e4c484bd8282426040516112be939291906138f2565b60405180910390a15050506112d260015f55565b5050565b5f816112e357505f919050565b60035463ffffffff16805b63ffffffff81165f908152600260205260409020548403611313575060019392505050565b8063ffffffff165f036113245750601e5b8061132e81613958565b9150508163ffffffff168163ffffffff16036112ee57505f9392505050565b60065473ffffffffffffffffffffffffffffffffffffffff16331461139e576040517fca52093b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f48211156113e5576040517fac69a54a0000000000000000000000000000000000000000000000000000000081526101f4600482015260248101839052604401610b34565b6004829055600581905560408051838152602081018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a15050565b600354606090640100000000900463ffffffff16600a81101561148257505060408051808201909152600d81527f4c6f7720616e6f6e796d69747900000000000000000000000000000000000000602082015290565b60328110156114c457505060408051808201909152601081527f4d656469756d20616e6f6e796d69747900000000000000000000000000000000602082015290565b606481101561150657505060408051808201909152600e81527f4869676820616e6f6e796d697479000000000000000000000000000000000000602082015290565b505060408051808201909152601181527f4d6178696d756d20616e6f6e796d697479000000000000000000000000000000602082015290565b5f5f61271060045484611552919061384e565b61155c9190613892565b90506005548161156c91906138a5565b9392505050565b61157b61284f565b858314158061158a5750828114155b156115cb576040517f5d7488540000000000000000000000000000000000000000000000000000000081526004810187905260248101849052604401610b34565b5f5b868110156116bd5760075f8989848181106115ea576115ea613821565b602090810292909201358352508101919091526040015f205460ff16156116595787878281811061161d5761161d613821565b905060200201356040517fd692b8a2000000000000000000000000000000000000000000000000000000008152600401610b3491815260200190565b600160075f8a8a8581811061167057611670613821565b602090810292909201358352508101919091526040015f2080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016115cd565b506116c7886112d6565b611700576040517f6009dbad00000000000000000000000000000000000000000000000000000000815260048101899052602401610b34565b5f6117118989898989898989612b67565b6040517fea50d0e400000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e49061178a908e908e908690600401613995565b602060405180830381865afa1580156117a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117c991906139f9565b6117ff576040517f63cac85c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b84811015611986575f86868381811061181c5761181c613821565b9050602002016020810190611831919061356f565b73ffffffffffffffffffffffffffffffffffffffff160361193a575f8773ffffffffffffffffffffffffffffffffffffffff1685858481811061187657611876613821565b905060200201356040515f6040518083038185875af1925050503d805f81146118ba576040519150601f19603f3d011682016040523d82523d5f602084013e6118bf565b606091505b505090508061193457878585848181106118db576118db613821565b6040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526020029190910135602483015250604401610b34565b5061197e565b61197e8785858481811061195057611950613821565b9050602002013588888581811061196957611969613821565b9050602002016020810190610ede919061356f565b600101611801565b508573ffffffffffffffffffffffffffffffffffffffff167fa1fc5b2aa6ecce4d0137951801a639cc613f4fa1f97e6e72a685bef5124d40458989888888886040516119d796959493929190613a61565b60405180910390a2506119e960015f55565b50505050505050505050565b5f5f5f61271060045485611a09919061384e565b611a139190613892565b6005549093509150611a2582846138a5565b929491935050565b611a3561284f565b5f8181526008602052604090205460ff1615611a80576040517f248aad9300000000000000000000000000000000000000000000000000000000815260048101829052602401610b34565b5f61271060045434611a92919061384e565b611a9c9190613892565b90505f60055482611aad91906138a5565b9050803411611af1576040517ff6e0f2e200000000000000000000000000000000000000000000000000000000815234600482015260248101829052604401610b34565b5f83815260086020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611b3084612962565b90508115611cce5760065473ffffffffffffffffffffffffffffffffffffffff16611bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169084908381818185875af1925050503d805f8114611c34576040519150601f19603f3d011682016040523d82523d5f602084013e611c39565b606091505b5050905080611c97576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101849052604401610b34565b6040518381525f907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df9060200160405180910390a2505b6040805163ffffffff8316815242602082015285917f772de1ad5fb2cf1d37f010d2b0556f2e0a9d2450e45974e8a640a6b0bc2b8713910160405180910390a2505050611d1a60015f55565b50565b60035463ffffffff640100000000909104165f8080611d4f60035463ffffffff165f9081526002602052604090205490565b92506004549150600554905090919293565b5f80611d8e7f000000000000000000000000000000000000000000000000000000000000000060026137cc565b6003549091508190611db090606490640100000000900463ffffffff1661384e565b611dba9190613892565b91505090565b60065473ffffffffffffffffffffffffffffffffffffffff163314611e11576040517fca52093b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611e5e576040517fe1693c0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f20607ed15af745f0ec1d4cd642508d4bfeb359f58cc027fbc2857dda8c4c9cc9905f90a35050565b5f815f03611f0357507f034f996155f0d9b1a838977011b06a385e8701d10aae926876c9c8a6fa69bf18919050565b81600103611f3257507f2a06a72b1f2b24364e5e4120849b4692bbf91c4bcad66845a399e67022e9f0d9919050565b81600203611f6157507f059c8070788f7308bbda9246ef2d321ad1bf81cda0edfe01399652ff34c53da4919050565b81600303611f9057507f27d1ecbd5115efbbda09f8d68eaeabd0a9f28debb8f211c85234ac5bb3f332c2919050565b81600403611fbf57507f1b4fbca11bb4821fc5f3264debc386ff9b7081458ca4725ba5386b1774f665e4919050565b81600503611fee57507f189af983b17956b1997302f93059af4d2414a2d19deea6743e8484e3e9213b9d919050565b8160060361201d57507f2d61566878b72076d8ccf4bb2211272cd24b352b27285088383c85b4ea19180c919050565b8160070361204c57507f16c3503aebf8d918c9771d683e335b2a62547fb8e86e5d0d6cb898c14fb5d396919050565b8160080361207b57507f1a5de8d583ecaaa9e3d684145c0410976a66ce979f7e92cd5c0fdbaa2ac1af5a919050565b816009036120aa57507f28e3f0b5fd188614cf8c2825ba0263ed70153e1a453f0662baedaeab12a66ef8919050565b81600a036120d957507f16b671eb844a8e4e463e820e26560357edee4ecfdbf5d7b0a28799911505088d919050565b81600b0361210857507f115ea0c2f132c5914d5bb737af6eed04115a3896f0d65e12e761ca560083da15919050565b81600c0361213757507f139a5b42099806c76efb52da0ec1dde06a836bf6f87ef7ab4bac7d00637e28f0919050565b81600d0361216657507f0804853482335a6533eb6a4ddfc215a08026db413d247a7695e807e38debea8e919050565b81600e0361219557507f2f0b264ab5f5630b591af93d93ec2dfed28eef017b251e40905cdf7983689803919050565b81600f036121c457507f170fc161bf1b9610bf196c173bdae82c4adfd93888dc317f5010822a3ba9ebee919050565b816010036121f357507f0b2e7665b17622cc0243b6fa35110aa7dd0ee3cc9409650172aa786ca5971439919050565b8160110361222257507f12d5a033cbeff854c5ba0c5628ac4628104be6ab370699a1b2b4209e518b0ac5919050565b8160120361225157507f1bc59846eb7eafafc85ba9a99a89562763735322e4255b7c1788a8fe8b90bf5d919050565b8160130361228057507f1b9421fbd79f6972a348a3dd4721781ec25a5d8d27342942ae00aba80a3904d4919050565b816014036122af57507f087fde1c4c9c27c347f347083139eee8759179d255ec8381c02298d3d6ccd233919050565b816015036122de57507f1e26b1884cb500b5e6bbfdeedbdca34b961caf3fa9839ea794bfc7f87d10b3f1919050565b8160160361230d57507f09fc1a538b88bda55a53253c62c153e67e8289729afd9b8bfd3f46f5eecd5a72919050565b8160170361233c57507f14cd0edec3423652211db5210475a230ca4771cd1e45315bcd6ea640f14077e2919050565b8160180361236b57507f1d776a76bc76f4305ef0b0b27a58a9565864fe1b9f2a198e8247b3e599e036ca919050565b8160190361239a57507f1f93e3103fed2d3bd056c3ac49b4a0728578be33595959788fa25514cdb5d42f919050565b81601a036123c957507f138b0576ee7346fb3f6cfb632f92ae206395824b9333a183c15470404c977a3b919050565b81601b036123f857507f0745de8522abfcd24bd50875865592f73a190070b4cb3d8976e3dbff8fdb7f3d919050565b81601c0361242757507f2ffb8c798b9dd2645e9187858cb92a86c86dcd1138f5d610c33df2696f5f6860919050565b81601d0361245657507f2612a1395168260c9999287df0e3c3f1b0d8e008e90cd15941e4c2df08a68a5a919050565b81601e0361248557507f10ebedce66a910039c8edb2cd832d6a9857648ccff5e99b5d08009b44b088edf919050565b81601f036124b457507f213fb841f9de06958cf4403477bdbff7c59d6249daabfee147f853db7c808082919050565b6040517f76de023800000000000000000000000000000000000000000000000000000000815260048101839052602401610b34565b919050565b5f3411612557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742073656e6420455448000000000000000000000000000000000000006044820152606401610b34565b5f81815260096020526040902054156125cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f6d6d69746d656e7420616c726561647920657869737473000000000000006044820152606401610b34565b5f818152600960209081526040918290204290819055825134815291820152339183917f102c77a37110578411bdac65784540313aa4617c8c5bfc9d18def66f7ed25b03910160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff8216612640575047919050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156126a8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6b91906137dd565b604080516020808201879052818301869052606085811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690830152607480830185905283518084039091018152609490920190925280519101205f905f818152600960205260409020549091506127a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f436f6d6d69746d656e74206e6f7420666f756e640000000000000000000000006044820152606401610b34565b5f818152600960205260409020546127bc9061012c906138a5565b421015612825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f52657665616c2064656c6179206e6f74206d65740000000000000000000000006044820152606401610b34565b5f8181526009602052604081205561283e838383612dbe565b5050505050565b806124e981613177565b60025f540361288a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f55565b60405173ffffffffffffffffffffffffffffffffffffffff84811660248301528381166044830152606482018390526129199186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613200565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526044820183905261295d91859182169063a9059cbb906064016128d2565b505050565b6003545f90640100000000900463ffffffff166129a07f00000000000000000000000000000000000000000000000000000000000000006002613ae7565b63ffffffff168163ffffffff16036129ec576040517f341df5fc00000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152602401610b34565b80835f80805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612aa957612a31600286613afe565b63ffffffff165f03612a6d57839250612a4f8163ffffffff16611ed4565b63ffffffff82165f9081526001602052604090208590559150612a88565b63ffffffff81165f9081526001602052604090205492508391505b612a928383610adb565b9350612a9f600286613b25565b94506001016129f2565b506003545f90601e90612ac39063ffffffff166001613b4c565b612acd9190613afe565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff83169081179091555f9081526002602052604090208590559050612b1d866001613b4c565b6003805463ffffffff92909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905550939695505050505050565b60408051600a80825261016082019092526060915f9190602082016101408036833701905050905089815f81518110612ba257612ba2613821565b60209081029190910101525f5b6003811015612c3a5788811015612c0857898982818110612bd257612bd2613821565b9050602002013582826001612be791906138a5565b81518110612bf757612bf7613821565b602002602001018181525050612c32565b5f82612c158360016138a5565b81518110612c2557612c25613821565b6020026020010181815250505b600101612baf565b508673ffffffffffffffffffffffffffffffffffffffff165f1b81600481518110612c6757612c67613821565b60209081029190910101525f5b6003811015612d215785811015612cef57868682818110612c9757612c97613821565b9050602002016020810190612cac919061356f565b73ffffffffffffffffffffffffffffffffffffffff1682612cce8360056138a5565b81518110612cde57612cde613821565b602002602001018181525050612d19565b5f82612cfc8360056138a5565b81518110612d0c57612d0c613821565b6020026020010181815250505b600101612c74565b505f5b6003811015612db05783811015612d7e57848482818110612d4757612d47613821565b6020029190910135905082612d5d8360086138a5565b81518110612d6d57612d6d613821565b602002602001018181525050612da8565b5f82612d8b8360086138a5565b81518110612d9b57612d9b613821565b6020026020010181815250505b600101612d24565b509998505050505050505050565b5f8181526008602052604090205460ff1615612e09576040517f248aad9300000000000000000000000000000000000000000000000000000000815260048101829052602401610b34565b5f61271060045484612e1b919061384e565b612e259190613892565b90505f60055482612e3691906138a5565b9050808411612e7b576040517ff6e0f2e20000000000000000000000000000000000000000000000000000000081526004810185905260248101829052604401610b34565b73ffffffffffffffffffffffffffffffffffffffff851615612f3757612eb973ffffffffffffffffffffffffffffffffffffffff8616333087612890565b8015612f3757600654612ee69073ffffffffffffffffffffffffffffffffffffffff87811691168361291f565b8473ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df82604051612f2e91815260200190565b60405180910390a25b5f83815260086020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055612f7684612962565b905073ffffffffffffffffffffffffffffffffffffffff861661312f57811561312f5760065473ffffffffffffffffffffffffffffffffffffffff1661303e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169084908381818185875af1925050503d805f8114613095576040519150601f19603f3d011682016040523d82523d5f602084013e61309a565b606091505b50509050806130f8576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101849052604401610b34565b6040518381525f907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df9060200160405180910390a2505b6040805163ffffffff8316815242602082015285917f772de1ad5fb2cf1d37f010d2b0556f2e0a9d2450e45974e8a640a6b0bc2b8713910160405180910390a2505050505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110611d1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4669656c643a20696e70757420697320746f6f206c61726765000000000000006044820152606401610b34565b5f5f60205f8451602086015f885af18061321f576040513d5f823e3d81fd5b50505f513d91508115613236578060011415613250565b73ffffffffffffffffffffffffffffffffffffffff84163b155b15612919576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610b34565b5f5f604083850312156132b0575f5ffd5b50508035926020909101359150565b5f602082840312156132cf575f5ffd5b5035919050565b5f5f602083850312156132e7575f5ffd5b823567ffffffffffffffff8111156132fd575f5ffd5b8301601f8101851361330d575f5ffd5b803567ffffffffffffffff811115613323575f5ffd5b856020606083028401011115613337575f5ffd5b6020919091019590945092505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611d1a575f5ffd5b5f5f5f5f608085870312156133ce575f5ffd5b84356133d98161339a565b966020860135965060408601359560600135945092505050565b5f5f83601f840112613403575f5ffd5b50813567ffffffffffffffff81111561341a575f5ffd5b602083019150836020828501011115613431575f5ffd5b9250929050565b5f5f83601f840112613448575f5ffd5b50813567ffffffffffffffff81111561345f575f5ffd5b6020830191508360208260051b8501011115613431575f5ffd5b80356124e98161339a565b5f5f5f5f5f5f5f5f5f5f60c08b8d03121561349d575f5ffd5b8a3567ffffffffffffffff8111156134b3575f5ffd5b6134bf8d828e016133f3565b909b5099505060208b0135975060408b013567ffffffffffffffff8111156134e5575f5ffd5b6134f18d828e01613438565b9098509650613504905060608c01613479565b945060808b013567ffffffffffffffff81111561351f575f5ffd5b61352b8d828e01613438565b90955093505060a08b013567ffffffffffffffff81111561354a575f5ffd5b6135568d828e01613438565b915080935050809150509295989b9194979a5092959850565b5f6020828403121561357f575f5ffd5b813561156c8161339a565b5f5f5f5f6080858703121561359d575f5ffd5b843593506020850135925060408501356135b68161339a565b9396929550929360600135925050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6001815b600184111561362e57808504811115613612576136126135c6565b600184161561362057908102905b60019390931c9280026135f7565b935093915050565b5f8261364457506001610c6b565b8161365057505f610c6b565b816001811461366657600281146136705761368c565b6001915050610c6b565b60ff841115613681576136816135c6565b50506001821b610c6b565b5060208310610133831016604e8410600b84101617156136af575081810a610c6b565b6136da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846135f3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561370c5761370c6135c6565b029392505050565b5f8261372257506001610c6b565b8161372e57505f610c6b565b816001811461366657600281036137705760ff841115613750576137506135c6565b6001841b915063ffffffff82111561376a5761376a6135c6565b50610c6b565b5060208310610133831016604e8410600b84101617156137a7575081810a63ffffffff8111156137a2576137a26135c6565b610c6b565b6137b663ffffffff84846135f3565b8063ffffffff0482111561370c5761370c6135c6565b5f610c6863ffffffff841683613636565b5f602082840312156137ed575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b8082028115828204841417610c6b57610c6b6135c6565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f826138a0576138a0613865565b500490565b80820180821115610c6b57610c6b6135c6565b5f8151808452602084019350602083015f5b828110156138e85781518652602095860195909101906001016138ca565b5093949350505050565b606081525f61390460608301866138b8565b82810360208401528085518083526020830191506020870192505f5b8181101561394457835163ffffffff16835260209384019390920191600101613920565b505060409390930193909352509392505050565b5f63ffffffff82168061396d5761396d6135c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b60408152826040820152828460608301375f606084830101525f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820160608382030160208401526139ef60608201856138b8565b9695505050505050565b5f60208284031215613a09575f5ffd5b8151801515811461156c575f5ffd5b8183525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613a48575f5ffd5b8260051b80836020870137939093016020019392505050565b606081525f613a7460608301888a613a18565b8281036020808501919091528682528791015f5b87811015613ac5578235613a9b8161339a565b73ffffffffffffffffffffffffffffffffffffffff16825260209283019290910190600101613a88565b508381036040850152613ad9818688613a18565b9a9950505050505050505050565b5f610c6863ffffffff841663ffffffff8416613714565b5f63ffffffff831680613b1357613b13613865565b8063ffffffff84160691505092915050565b5f63ffffffff831680613b3a57613b3a613865565b8063ffffffff84160491505092915050565b63ffffffff8181168382160190811115610c6b57610c6b6135c656fea264697066735822122084ed0611a29cc73fc5107c3ea116475764f06b84d1aa0f4429928727f20e0c6064736f6c634300081e0033",
        "sourceMap": "819:25458:85:-:0;;;1577:36:84;;;-1:-1:-1;;;;;;1687:33:84;;;7520:459:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7727:16;7745:7;1857:1:58;2061:7;:21;;;;2763:6:84;:11;;2773:1;2763:11;2759:109;;2797:60;;-1:-1:-1;;;2797:60:84;;1324:10:104;1312:23;;2797:60:84;;;1294:42:104;1267:18;;2797:60:84;;;;;;;;2759:109;929:2;2881:31;;;;2877:124;;2935:55;;-1:-1:-1;;;2935:55:84;;1324:10:104;1312:23;;2935:55:84;;;1294:42:104;1267:18;;2935:55:84;1150:192:104;2877:124:84;3010:16;;;;;;;-1:-1:-1;;;;;3036:18:84;;;;3077:13;;:5;:13::i;:::-;3064:10;;;:7;:10;;;:26;-1:-1:-1;;;;;;;7772:25:85;::::1;7764:72;;;::::0;-1:-1:-1;;;7764:72:85;;1549:2:104;7764:72:85::1;::::0;::::1;1531:21:104::0;1588:2;1568:18;;;1561:30;1627:34;1607:18;;;1600:62;-1:-1:-1;;;1678:18:104;;;1671:32;1720:19;;7764:72:85::1;1347:398:104::0;7764:72:85::1;-1:-1:-1::0;;;;;7846:22:85;;::::1;;::::0;7878:10:::1;:24:::0;;-1:-1:-1;;;;;;7878:24:85::1;::::0;;;::::1;::::0;;;::::1;::::0;;;7912:13:::1;:30:::0;;;;-1:-1:-1;;7952:8:85::1;:20:::0;819:25458;;6619:3632:84;6666:7;6689:1;6694;6689:6;6685:3559;;-1:-1:-1;6712:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6685:3559::-;6798:1;6803;6798:6;6794:3450;;-1:-1:-1;6821:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6794:3450::-;6907:1;6912;6907:6;6903:3341;;-1:-1:-1;6930:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6903:3341::-;7016:1;7021;7016:6;7012:3232;;-1:-1:-1;7039:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7012:3232::-;7125:1;7130;7125:6;7121:3123;;-1:-1:-1;7148:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7121:3123::-;7234:1;7239;7234:6;7230:3014;;-1:-1:-1;7257:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7230:3014::-;7343:1;7348;7343:6;7339:2905;;-1:-1:-1;7366:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7339:2905::-;7452:1;7457;7452:6;7448:2796;;-1:-1:-1;7475:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7448:2796::-;7561:1;7566;7561:6;7557:2687;;-1:-1:-1;7584:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7557:2687::-;7670:1;7675;7670:6;7666:2578;;-1:-1:-1;7693:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7666:2578::-;7779:1;7784:2;7779:7;7775:2469;;-1:-1:-1;7803:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7775:2469::-;7889:1;7894:2;7889:7;7885:2359;;-1:-1:-1;7913:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7885:2359::-;7999:1;8004:2;7999:7;7995:2249;;-1:-1:-1;8023:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7995:2249::-;8109:1;8114:2;8109:7;8105:2139;;-1:-1:-1;8133:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8105:2139::-;8219:1;8224:2;8219:7;8215:2029;;-1:-1:-1;8243:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8215:2029::-;8329:1;8334:2;8329:7;8325:1919;;-1:-1:-1;8353:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8325:1919::-;8439:1;8444:2;8439:7;8435:1809;;-1:-1:-1;8463:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8435:1809::-;8549:1;8554:2;8549:7;8545:1699;;-1:-1:-1;8573:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8545:1699::-;8659:1;8664:2;8659:7;8655:1589;;-1:-1:-1;8683:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8655:1589::-;8769:1;8774:2;8769:7;8765:1479;;-1:-1:-1;8793:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8765:1479::-;8879:1;8884:2;8879:7;8875:1369;;-1:-1:-1;8903:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8875:1369::-;8989:1;8994:2;8989:7;8985:1259;;-1:-1:-1;9013:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8985:1259::-;9099:1;9104:2;9099:7;9095:1149;;-1:-1:-1;9123:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9095:1149::-;9209:1;9214:2;9209:7;9205:1039;;-1:-1:-1;9233:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9205:1039::-;9319:1;9324:2;9319:7;9315:929;;-1:-1:-1;9343:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9315:929::-;9429:1;9434:2;9429:7;9425:819;;-1:-1:-1;9453:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9425:819::-;9539:1;9544:2;9539:7;9535:709;;-1:-1:-1;9563:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9535:709::-;9649:1;9654:2;9649:7;9645:599;;-1:-1:-1;9673:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9645:599::-;9759:1;9764:2;9759:7;9755:489;;-1:-1:-1;9783:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9755:489::-;9869:1;9874:2;9869:7;9865:379;;-1:-1:-1;9893:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9865:379::-;9979:1;9984:2;9979:7;9975:269;;-1:-1:-1;10003:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9975:269::-;10089:1;10094:2;10089:7;10085:159;;-1:-1:-1;10113:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;10085:159::-;10202:42;;-1:-1:-1;;;10202:42:84;;;;;1896:25:104;;;1869:18;;10202:42:84;1750:177:104;14:142;-1:-1:-1;;;;;100:31:104;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:984::-;313:6;321;329;337;345;353;406:3;394:9;385:7;381:23;377:33;374:53;;;423:1;420;413:12;374:53;455:9;449:16;474:42;510:5;474:42;:::i;:::-;585:2;570:18;;564:25;535:5;;-1:-1:-1;598:44:104;564:25;598:44;:::i;:::-;713:2;698:18;;692:25;661:7;;-1:-1:-1;761:10:104;748:24;;736:37;;726:65;;787:1;784;777:12;726:65;862:2;847:18;;841:25;810:7;;-1:-1:-1;875:44:104;841:25;875:44;:::i;:::-;1011:3;996:19;;990:26;1108:3;1093:19;;;1087:26;161:984;;;;-1:-1:-1;161:984:104;;938:7;;990:26;;161:984;-1:-1:-1;;;161:984:104:o;1750:177::-;819:25458:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405260043610610350575f3560e01c80637d57287a116101bd578063c3a2ade6116100f2578063e829558811610092578063f14fcbc81161006d578063f14fcbc814610a01578063f20d749514610a14578063f8b2cb4f14610a28578063fa9b468914610a47575f5ffd5b8063e82955881461098c578063ed7cf2df146109ab578063ee594ca4146109d6575f5ffd5b8063d3f34ff1116100cd578063d3f34ff114610910578063db9753a01461092f578063dc79c2eb14610962578063e1f1c4a714610977575f5ffd5b8063c3a2ade6146104f7578063cd87a3b4146108e8578063d0a1db84146108fc575f5ffd5b8063a305c4971161015d578063af28f7e811610138578063af28f7e81461039f578063b214faa51461088d578063bbb85188146108a0578063bf7d653b146108d4575f5ffd5b8063a305c4971461081f578063a7bc4e301461083e578063aac78c8414610853575f5ffd5b806399a5d7471161019857806399a5d747146107795780639c8b91c1146107985780639dc166b7146107c3578063a20a941e146107f1575f5ffd5b80637d57287a146106b4578063871211df1461073157806391792d5b14610764575f5ffd5b806354111315116102935780636d9833e31161023357806373d732021161020e57806373d7320214610637578063780a7ff01461066a578063783e558f1461067f5780637d40f6d514610693575f5ffd5b80636d9833e3146105c65780636db79437146105e5578063705f032f14610604575f5ffd5b806357f657061161026e57806357f657061461054857806359f41a81146105795780635e85407e1461059d578063684d329c146105b1575f5ffd5b806354111315146104f75780635445b0071461050b5780635580ee3a14610533575f5ffd5b80632131c68c116102fe57806338bf282e116102d957806338bf282e14610477578063414a37ba1461049657806350453f28146104c95780635296bffd14610463575f5ffd5b80632131c68c146103f057806323845e4b1461044157806337dbd12014610463575f5ffd5b8063145f9e2f1161032e578063145f9e2f146103b35780631ba15650146103c85780631d06a3cd146103dc575f5ffd5b8063093c87f3146103545780630fbc8f5b1461037d578063132d62751461039f575b5f5ffd5b34801561035f575f5ffd5b50610368610a66565b60405190151581526020015b60405180910390f35b348015610388575f5ffd5b50610391610aaa565b604051908152602001610374565b3480156103aa575f5ffd5b50610391600a81565b3480156103be575f5ffd5b5061039161070881565b3480156103d3575f5ffd5b50610391601481565b3480156103e7575f5ffd5b50610391600881565b3480156103fb575f5ffd5b5060065461041c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610374565b34801561044c575f5ffd5b50600354640100000000900463ffffffff16610391565b34801561046e575f5ffd5b50610391603281565b348015610482575f5ffd5b5061039161049136600461329f565b610adb565b3480156104a1575f5ffd5b506103917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b3480156104d4575f5ffd5b506103686104e33660046132bf565b5f9081526008602052604090205460ff1690565b348015610502575f5ffd5b50610391606481565b348015610516575f5ffd5b5060035463ffffffff165f90815260026020526040902054610391565b34801561053e575f5ffd5b50610391610e1081565b348015610553575f5ffd5b506003546105649063ffffffff1681565b60405163ffffffff9091168152602001610374565b348015610584575f5ffd5b5060035461056490640100000000900463ffffffff1681565b3480156105a8575f5ffd5b50610391610c71565b6105c46105bf3660046132d6565b610caf565b005b3480156105d1575f5ffd5b506103686105e03660046132bf565b6112d6565b3480156105f0575f5ffd5b506105c46105ff36600461329f565b61134d565b34801561060f575f5ffd5b5061041c7f000000000000000000000000000000000000000000000000000000000000000081565b348015610642575f5ffd5b506105647f000000000000000000000000000000000000000000000000000000000000000081565b348015610675575f5ffd5b5061039160045481565b34801561068a575f5ffd5b50610391600381565b34801561069e575f5ffd5b506106a761142c565b6040516103749190613347565b3480156106bf575f5ffd5b506103916106ce3660046133bb565b60408051602080820194909452808201929092527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b169482019490945260748082019390935283518082039093018352609401909252805191012090565b34801561073c575f5ffd5b506103917f034f996155f0d9b1a838977011b06a385e8701d10aae926876c9c8a6fa69bf1881565b34801561076f575f5ffd5b5061039160055481565b348015610784575f5ffd5b506103916107933660046132bf565b61153f565b3480156107a3575f5ffd5b506103916107b23660046132bf565b60026020525f908152604090205481565b3480156107ce575f5ffd5b506103686107dd3660046132bf565b60086020525f908152604090205460ff1681565b3480156107fc575f5ffd5b5061036861080b3660046132bf565b60076020525f908152604090205460ff1681565b34801561082a575f5ffd5b506105c4610839366004613484565b611573565b348015610849575f5ffd5b5061039161012c81565b34801561085e575f5ffd5b5061087261086d3660046132bf565b6119f5565b60408051938452602084019290925290820152606001610374565b6105c461089b3660046132bf565b611a2d565b3480156108ab575f5ffd5b506108b4611d1d565b604080519485526020850193909352918301526060820152608001610374565b3480156108df575f5ffd5b50610391611d61565b3480156108f3575f5ffd5b50610564601e81565b348015610907575f5ffd5b50610564601f81565b34801561091b575f5ffd5b506105c461092a36600461356f565b611dc0565b34801561093a575f5ffd5b5061041c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561096d575f5ffd5b506103916101f481565b348015610982575f5ffd5b5061039161271081565b348015610997575f5ffd5b506103916109a63660046132bf565b611ed4565b3480156109b6575f5ffd5b506103916109c53660046132bf565b60016020525f908152604090205481565b3480156109e1575f5ffd5b506103916109f03660046132bf565b60096020525f908152604090205481565b6105c4610a0f3660046132bf565b6124ee565b348015610a1f575f5ffd5b50610391600581565b348015610a33575f5ffd5b50610391610a4236600461356f565b61261d565b348015610a52575f5ffd5b506105c4610a6136600461358a565b6126cc565b5f610a927f000000000000000000000000000000000000000000000000000000000000000060026137cc565b600354640100000000900463ffffffff161015919050565b5f610ad67f000000000000000000000000000000000000000000000000000000000000000060026137cc565b905090565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018310610b3d576040517f8636b86a000000000000000000000000000000000000000000000000000000008152600481018490526024015b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210610b99576040517f51da4a5b00000000000000000000000000000000000000000000000000000000815260048101839052602401610b34565b610c687f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663055d8d54610be186612845565b610bea86612845565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401602060405180830381865afa158015610c41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6591906137dd565b90565b90505b92915050565b6003545f90640100000000900463ffffffff166014811015610c9657610e1091505090565b6032811015610ca85761070891505090565b5f91505090565b610cb761284f565b5f808267ffffffffffffffff811115610cd257610cd26137f4565b604051908082528060200260200182016040528015610cfb578160200160208202803683370190505b5090505f8367ffffffffffffffff811115610d1857610d186137f4565b604051908082528060200260200182016040528015610d41578160200160208202803683370190505b5090505f5b84811015610ff45736868683818110610d6157610d61613821565b606002919091016040818101355f9081526008602052205490925060ff16159050610dbe57604080517f248aad93000000000000000000000000000000000000000000000000000000008152908201356004820152602401610b34565b5f6127106004548360200135610dd4919061384e565b610dde9190613892565b90505f60055482610def91906138a5565b905080836020013511610e3b576040517ff6e0f2e20000000000000000000000000000000000000000000000000000000081526020840135600482015260248101829052604401610b34565b5f610e49602085018561356f565b73ffffffffffffffffffffffffffffffffffffffff1603610e7957610e726020840135886138a5565b9650610f58565b610ead333060208601803590610e8f908861356f565b73ffffffffffffffffffffffffffffffffffffffff16929190612890565b8015610f5857600654610efb9073ffffffffffffffffffffffffffffffffffffffff1682610ede602087018761356f565b73ffffffffffffffffffffffffffffffffffffffff16919061291f565b610f08602084018461356f565b73ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df82604051610f4f91815260200190565b60405180910390a25b6040808401355f81815260086020529190912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558651879086908110610fa857610fa8613821565b602002602001018181525050610fc18360400135612962565b858581518110610fd357610fd3613821565b63ffffffff9290921660209283029190910190910152505050600101610d46565b50348314611037576040517f0aa30c9c00000000000000000000000000000000000000000000000000000000815260048101849052346024820152604401610b34565b5f5b8481101561128a573686868381811061105457611054613821565b6060029190910191505f905061106d602083018361356f565b73ffffffffffffffffffffffffffffffffffffffff1603611281575f612710600454836020013561109e919061384e565b6110a89190613892565b90505f600554826110b991906138a5565b9050801561127e5760065473ffffffffffffffffffffffffffffffffffffffff16611166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d805f81146111bd576040519150601f19603f3d011682016040523d82523d5f602084013e6111c2565b606091505b5050905080611220576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101839052604401610b34565b61122d602085018561356f565b73ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df8360405161127491815260200190565b60405180910390a2505b50505b50600101611039565b507fe9cab51270aeafd33a836fd81eb860b78f628a22134783bb478e9222e4c484bd8282426040516112be939291906138f2565b60405180910390a15050506112d260015f55565b5050565b5f816112e357505f919050565b60035463ffffffff16805b63ffffffff81165f908152600260205260409020548403611313575060019392505050565b8063ffffffff165f036113245750601e5b8061132e81613958565b9150508163ffffffff168163ffffffff16036112ee57505f9392505050565b60065473ffffffffffffffffffffffffffffffffffffffff16331461139e576040517fca52093b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f48211156113e5576040517fac69a54a0000000000000000000000000000000000000000000000000000000081526101f4600482015260248101839052604401610b34565b6004829055600581905560408051838152602081018390527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a15050565b600354606090640100000000900463ffffffff16600a81101561148257505060408051808201909152600d81527f4c6f7720616e6f6e796d69747900000000000000000000000000000000000000602082015290565b60328110156114c457505060408051808201909152601081527f4d656469756d20616e6f6e796d69747900000000000000000000000000000000602082015290565b606481101561150657505060408051808201909152600e81527f4869676820616e6f6e796d697479000000000000000000000000000000000000602082015290565b505060408051808201909152601181527f4d6178696d756d20616e6f6e796d697479000000000000000000000000000000602082015290565b5f5f61271060045484611552919061384e565b61155c9190613892565b90506005548161156c91906138a5565b9392505050565b61157b61284f565b858314158061158a5750828114155b156115cb576040517f5d7488540000000000000000000000000000000000000000000000000000000081526004810187905260248101849052604401610b34565b5f5b868110156116bd5760075f8989848181106115ea576115ea613821565b602090810292909201358352508101919091526040015f205460ff16156116595787878281811061161d5761161d613821565b905060200201356040517fd692b8a2000000000000000000000000000000000000000000000000000000008152600401610b3491815260200190565b600160075f8a8a8581811061167057611670613821565b602090810292909201358352508101919091526040015f2080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556001016115cd565b506116c7886112d6565b611700576040517f6009dbad00000000000000000000000000000000000000000000000000000000815260048101899052602401610b34565b5f6117118989898989898989612b67565b6040517fea50d0e400000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e49061178a908e908e908690600401613995565b602060405180830381865afa1580156117a5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117c991906139f9565b6117ff576040517f63cac85c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b84811015611986575f86868381811061181c5761181c613821565b9050602002016020810190611831919061356f565b73ffffffffffffffffffffffffffffffffffffffff160361193a575f8773ffffffffffffffffffffffffffffffffffffffff1685858481811061187657611876613821565b905060200201356040515f6040518083038185875af1925050503d805f81146118ba576040519150601f19603f3d011682016040523d82523d5f602084013e6118bf565b606091505b505090508061193457878585848181106118db576118db613821565b6040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90941660048501526020029190910135602483015250604401610b34565b5061197e565b61197e8785858481811061195057611950613821565b9050602002013588888581811061196957611969613821565b9050602002016020810190610ede919061356f565b600101611801565b508573ffffffffffffffffffffffffffffffffffffffff167fa1fc5b2aa6ecce4d0137951801a639cc613f4fa1f97e6e72a685bef5124d40458989888888886040516119d796959493929190613a61565b60405180910390a2506119e960015f55565b50505050505050505050565b5f5f5f61271060045485611a09919061384e565b611a139190613892565b6005549093509150611a2582846138a5565b929491935050565b611a3561284f565b5f8181526008602052604090205460ff1615611a80576040517f248aad9300000000000000000000000000000000000000000000000000000000815260048101829052602401610b34565b5f61271060045434611a92919061384e565b611a9c9190613892565b90505f60055482611aad91906138a5565b9050803411611af1576040517ff6e0f2e200000000000000000000000000000000000000000000000000000000815234600482015260248101829052604401610b34565b5f83815260086020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055611b3084612962565b90508115611cce5760065473ffffffffffffffffffffffffffffffffffffffff16611bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169084908381818185875af1925050503d805f8114611c34576040519150601f19603f3d011682016040523d82523d5f602084013e611c39565b606091505b5050905080611c97576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101849052604401610b34565b6040518381525f907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df9060200160405180910390a2505b6040805163ffffffff8316815242602082015285917f772de1ad5fb2cf1d37f010d2b0556f2e0a9d2450e45974e8a640a6b0bc2b8713910160405180910390a2505050611d1a60015f55565b50565b60035463ffffffff640100000000909104165f8080611d4f60035463ffffffff165f9081526002602052604090205490565b92506004549150600554905090919293565b5f80611d8e7f000000000000000000000000000000000000000000000000000000000000000060026137cc565b6003549091508190611db090606490640100000000900463ffffffff1661384e565b611dba9190613892565b91505090565b60065473ffffffffffffffffffffffffffffffffffffffff163314611e11576040517fca52093b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116611e5e576040517fe1693c0100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f20607ed15af745f0ec1d4cd642508d4bfeb359f58cc027fbc2857dda8c4c9cc9905f90a35050565b5f815f03611f0357507f034f996155f0d9b1a838977011b06a385e8701d10aae926876c9c8a6fa69bf18919050565b81600103611f3257507f2a06a72b1f2b24364e5e4120849b4692bbf91c4bcad66845a399e67022e9f0d9919050565b81600203611f6157507f059c8070788f7308bbda9246ef2d321ad1bf81cda0edfe01399652ff34c53da4919050565b81600303611f9057507f27d1ecbd5115efbbda09f8d68eaeabd0a9f28debb8f211c85234ac5bb3f332c2919050565b81600403611fbf57507f1b4fbca11bb4821fc5f3264debc386ff9b7081458ca4725ba5386b1774f665e4919050565b81600503611fee57507f189af983b17956b1997302f93059af4d2414a2d19deea6743e8484e3e9213b9d919050565b8160060361201d57507f2d61566878b72076d8ccf4bb2211272cd24b352b27285088383c85b4ea19180c919050565b8160070361204c57507f16c3503aebf8d918c9771d683e335b2a62547fb8e86e5d0d6cb898c14fb5d396919050565b8160080361207b57507f1a5de8d583ecaaa9e3d684145c0410976a66ce979f7e92cd5c0fdbaa2ac1af5a919050565b816009036120aa57507f28e3f0b5fd188614cf8c2825ba0263ed70153e1a453f0662baedaeab12a66ef8919050565b81600a036120d957507f16b671eb844a8e4e463e820e26560357edee4ecfdbf5d7b0a28799911505088d919050565b81600b0361210857507f115ea0c2f132c5914d5bb737af6eed04115a3896f0d65e12e761ca560083da15919050565b81600c0361213757507f139a5b42099806c76efb52da0ec1dde06a836bf6f87ef7ab4bac7d00637e28f0919050565b81600d0361216657507f0804853482335a6533eb6a4ddfc215a08026db413d247a7695e807e38debea8e919050565b81600e0361219557507f2f0b264ab5f5630b591af93d93ec2dfed28eef017b251e40905cdf7983689803919050565b81600f036121c457507f170fc161bf1b9610bf196c173bdae82c4adfd93888dc317f5010822a3ba9ebee919050565b816010036121f357507f0b2e7665b17622cc0243b6fa35110aa7dd0ee3cc9409650172aa786ca5971439919050565b8160110361222257507f12d5a033cbeff854c5ba0c5628ac4628104be6ab370699a1b2b4209e518b0ac5919050565b8160120361225157507f1bc59846eb7eafafc85ba9a99a89562763735322e4255b7c1788a8fe8b90bf5d919050565b8160130361228057507f1b9421fbd79f6972a348a3dd4721781ec25a5d8d27342942ae00aba80a3904d4919050565b816014036122af57507f087fde1c4c9c27c347f347083139eee8759179d255ec8381c02298d3d6ccd233919050565b816015036122de57507f1e26b1884cb500b5e6bbfdeedbdca34b961caf3fa9839ea794bfc7f87d10b3f1919050565b8160160361230d57507f09fc1a538b88bda55a53253c62c153e67e8289729afd9b8bfd3f46f5eecd5a72919050565b8160170361233c57507f14cd0edec3423652211db5210475a230ca4771cd1e45315bcd6ea640f14077e2919050565b8160180361236b57507f1d776a76bc76f4305ef0b0b27a58a9565864fe1b9f2a198e8247b3e599e036ca919050565b8160190361239a57507f1f93e3103fed2d3bd056c3ac49b4a0728578be33595959788fa25514cdb5d42f919050565b81601a036123c957507f138b0576ee7346fb3f6cfb632f92ae206395824b9333a183c15470404c977a3b919050565b81601b036123f857507f0745de8522abfcd24bd50875865592f73a190070b4cb3d8976e3dbff8fdb7f3d919050565b81601c0361242757507f2ffb8c798b9dd2645e9187858cb92a86c86dcd1138f5d610c33df2696f5f6860919050565b81601d0361245657507f2612a1395168260c9999287df0e3c3f1b0d8e008e90cd15941e4c2df08a68a5a919050565b81601e0361248557507f10ebedce66a910039c8edb2cd832d6a9857648ccff5e99b5d08009b44b088edf919050565b81601f036124b457507f213fb841f9de06958cf4403477bdbff7c59d6249daabfee147f853db7c808082919050565b6040517f76de023800000000000000000000000000000000000000000000000000000000815260048101839052602401610b34565b919050565b5f3411612557576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4d7573742073656e6420455448000000000000000000000000000000000000006044820152606401610b34565b5f81815260096020526040902054156125cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f6d6d69746d656e7420616c726561647920657869737473000000000000006044820152606401610b34565b5f818152600960209081526040918290204290819055825134815291820152339183917f102c77a37110578411bdac65784540313aa4617c8c5bfc9d18def66f7ed25b03910160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff8216612640575047919050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156126a8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6b91906137dd565b604080516020808201879052818301869052606085811b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001690830152607480830185905283518084039091018152609490920190925280519101205f905f818152600960205260409020549091506127a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f436f6d6d69746d656e74206e6f7420666f756e640000000000000000000000006044820152606401610b34565b5f818152600960205260409020546127bc9061012c906138a5565b421015612825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f52657665616c2064656c6179206e6f74206d65740000000000000000000000006044820152606401610b34565b5f8181526009602052604081205561283e838383612dbe565b5050505050565b806124e981613177565b60025f540361288a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f55565b60405173ffffffffffffffffffffffffffffffffffffffff84811660248301528381166044830152606482018390526129199186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050613200565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526044820183905261295d91859182169063a9059cbb906064016128d2565b505050565b6003545f90640100000000900463ffffffff166129a07f00000000000000000000000000000000000000000000000000000000000000006002613ae7565b63ffffffff168163ffffffff16036129ec576040517f341df5fc00000000000000000000000000000000000000000000000000000000815263ffffffff82166004820152602401610b34565b80835f80805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015612aa957612a31600286613afe565b63ffffffff165f03612a6d57839250612a4f8163ffffffff16611ed4565b63ffffffff82165f9081526001602052604090208590559150612a88565b63ffffffff81165f9081526001602052604090205492508391505b612a928383610adb565b9350612a9f600286613b25565b94506001016129f2565b506003545f90601e90612ac39063ffffffff166001613b4c565b612acd9190613afe565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff83169081179091555f9081526002602052604090208590559050612b1d866001613b4c565b6003805463ffffffff92909216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff90921691909117905550939695505050505050565b60408051600a80825261016082019092526060915f9190602082016101408036833701905050905089815f81518110612ba257612ba2613821565b60209081029190910101525f5b6003811015612c3a5788811015612c0857898982818110612bd257612bd2613821565b9050602002013582826001612be791906138a5565b81518110612bf757612bf7613821565b602002602001018181525050612c32565b5f82612c158360016138a5565b81518110612c2557612c25613821565b6020026020010181815250505b600101612baf565b508673ffffffffffffffffffffffffffffffffffffffff165f1b81600481518110612c6757612c67613821565b60209081029190910101525f5b6003811015612d215785811015612cef57868682818110612c9757612c97613821565b9050602002016020810190612cac919061356f565b73ffffffffffffffffffffffffffffffffffffffff1682612cce8360056138a5565b81518110612cde57612cde613821565b602002602001018181525050612d19565b5f82612cfc8360056138a5565b81518110612d0c57612d0c613821565b6020026020010181815250505b600101612c74565b505f5b6003811015612db05783811015612d7e57848482818110612d4757612d47613821565b6020029190910135905082612d5d8360086138a5565b81518110612d6d57612d6d613821565b602002602001018181525050612da8565b5f82612d8b8360086138a5565b81518110612d9b57612d9b613821565b6020026020010181815250505b600101612d24565b509998505050505050505050565b5f8181526008602052604090205460ff1615612e09576040517f248aad9300000000000000000000000000000000000000000000000000000000815260048101829052602401610b34565b5f61271060045484612e1b919061384e565b612e259190613892565b90505f60055482612e3691906138a5565b9050808411612e7b576040517ff6e0f2e20000000000000000000000000000000000000000000000000000000081526004810185905260248101829052604401610b34565b73ffffffffffffffffffffffffffffffffffffffff851615612f3757612eb973ffffffffffffffffffffffffffffffffffffffff8616333087612890565b8015612f3757600654612ee69073ffffffffffffffffffffffffffffffffffffffff87811691168361291f565b8473ffffffffffffffffffffffffffffffffffffffff167f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df82604051612f2e91815260200190565b60405180910390a25b5f83815260086020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055612f7684612962565b905073ffffffffffffffffffffffffffffffffffffffff861661312f57811561312f5760065473ffffffffffffffffffffffffffffffffffffffff1661303e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f44414f20616464726573732063616e6e6f74206265207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610b34565b6006546040515f9173ffffffffffffffffffffffffffffffffffffffff169084908381818185875af1925050503d805f8114613095576040519150601f19603f3d011682016040523d82523d5f602084013e61309a565b606091505b50509050806130f8576006546040517f44de6dee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101849052604401610b34565b6040518381525f907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df9060200160405180910390a2505b6040805163ffffffff8316815242602082015285917f772de1ad5fb2cf1d37f010d2b0556f2e0a9d2450e45974e8a640a6b0bc2b8713910160405180910390a2505050505050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110611d1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4669656c643a20696e70757420697320746f6f206c61726765000000000000006044820152606401610b34565b5f5f60205f8451602086015f885af18061321f576040513d5f823e3d81fd5b50505f513d91508115613236578060011415613250565b73ffffffffffffffffffffffffffffffffffffffff84163b155b15612919576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610b34565b5f5f604083850312156132b0575f5ffd5b50508035926020909101359150565b5f602082840312156132cf575f5ffd5b5035919050565b5f5f602083850312156132e7575f5ffd5b823567ffffffffffffffff8111156132fd575f5ffd5b8301601f8101851361330d575f5ffd5b803567ffffffffffffffff811115613323575f5ffd5b856020606083028401011115613337575f5ffd5b6020919091019590945092505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b73ffffffffffffffffffffffffffffffffffffffff81168114611d1a575f5ffd5b5f5f5f5f608085870312156133ce575f5ffd5b84356133d98161339a565b966020860135965060408601359560600135945092505050565b5f5f83601f840112613403575f5ffd5b50813567ffffffffffffffff81111561341a575f5ffd5b602083019150836020828501011115613431575f5ffd5b9250929050565b5f5f83601f840112613448575f5ffd5b50813567ffffffffffffffff81111561345f575f5ffd5b6020830191508360208260051b8501011115613431575f5ffd5b80356124e98161339a565b5f5f5f5f5f5f5f5f5f5f60c08b8d03121561349d575f5ffd5b8a3567ffffffffffffffff8111156134b3575f5ffd5b6134bf8d828e016133f3565b909b5099505060208b0135975060408b013567ffffffffffffffff8111156134e5575f5ffd5b6134f18d828e01613438565b9098509650613504905060608c01613479565b945060808b013567ffffffffffffffff81111561351f575f5ffd5b61352b8d828e01613438565b90955093505060a08b013567ffffffffffffffff81111561354a575f5ffd5b6135568d828e01613438565b915080935050809150509295989b9194979a5092959850565b5f6020828403121561357f575f5ffd5b813561156c8161339a565b5f5f5f5f6080858703121561359d575f5ffd5b843593506020850135925060408501356135b68161339a565b9396929550929360600135925050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6001815b600184111561362e57808504811115613612576136126135c6565b600184161561362057908102905b60019390931c9280026135f7565b935093915050565b5f8261364457506001610c6b565b8161365057505f610c6b565b816001811461366657600281146136705761368c565b6001915050610c6b565b60ff841115613681576136816135c6565b50506001821b610c6b565b5060208310610133831016604e8410600b84101617156136af575081810a610c6b565b6136da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846135f3565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561370c5761370c6135c6565b029392505050565b5f8261372257506001610c6b565b8161372e57505f610c6b565b816001811461366657600281036137705760ff841115613750576137506135c6565b6001841b915063ffffffff82111561376a5761376a6135c6565b50610c6b565b5060208310610133831016604e8410600b84101617156137a7575081810a63ffffffff8111156137a2576137a26135c6565b610c6b565b6137b663ffffffff84846135f3565b8063ffffffff0482111561370c5761370c6135c6565b5f610c6863ffffffff841683613636565b5f602082840312156137ed575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b8082028115828204841417610c6b57610c6b6135c6565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f826138a0576138a0613865565b500490565b80820180821115610c6b57610c6b6135c6565b5f8151808452602084019350602083015f5b828110156138e85781518652602095860195909101906001016138ca565b5093949350505050565b606081525f61390460608301866138b8565b82810360208401528085518083526020830191506020870192505f5b8181101561394457835163ffffffff16835260209384019390920191600101613920565b505060409390930193909352509392505050565b5f63ffffffff82168061396d5761396d6135c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0192915050565b60408152826040820152828460608301375f606084830101525f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820160608382030160208401526139ef60608201856138b8565b9695505050505050565b5f60208284031215613a09575f5ffd5b8151801515811461156c575f5ffd5b8183525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613a48575f5ffd5b8260051b80836020870137939093016020019392505050565b606081525f613a7460608301888a613a18565b8281036020808501919091528682528791015f5b87811015613ac5578235613a9b8161339a565b73ffffffffffffffffffffffffffffffffffffffff16825260209283019290910190600101613a88565b508381036040850152613ad9818688613a18565b9a9950505050505050505050565b5f610c6863ffffffff841663ffffffff8416613714565b5f63ffffffff831680613b1357613b13613865565b8063ffffffff84160691505092915050565b5f63ffffffff831680613b3a57613b3a613865565b8063ffffffff84160491505092915050565b63ffffffff8181168382160190811115610c6b57610c6b6135c656fea264697066735822122084ed0611a29cc73fc5107c3ea116475764f06b84d1aa0f4429928727f20e0c6064736f6c634300081e0033",
        "sourceMap": "819:25458:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22603:106;;;;;;;;;;;;;:::i;:::-;;;179:14:104;;172:22;154:41;;142:2;127:18;22603:106:85;;;;;;;;22105:94;;;;;;;;;;;;;:::i;:::-;;;352:25:104;;;340:2;325:18;22105:94:85;206:177:104;1388:52:85;;;;;;;;;;;;1438:2;1388:52;;1618:46;;;;;;;;;;;;1660:4;1618:46;;1745:49;;;;;;;;;;;;1792:2;1745:49;;2270:56;;;;;;;;;;;;2325:1;2270:56;;2588:25;;;;;;;;;;-1:-1:-1;2588:25:85;;;;;;;;;;;564:42:104;552:55;;;534:74;;522:2;507:18;2588:25:85;388:226:104;18940:94:85;;;;;;;;;;-1:-1:-1;19012:15:85;;;;;;;18940:94;;1800:50;;;;;;;;;;;;1848:2;1800:50;;3339:436:84;;;;;;;;;;-1:-1:-1;3339:436:84;;;;;:::i;:::-;;:::i;510:114::-;;;;;;;;;;;;547:77;510:114;;21212:124:85;;;;;;;;;;-1:-1:-1;21212:124:85;;;;;:::i;:::-;21280:4;21303:26;;;:13;:26;;;;;;;;;21212:124;2388:51;;;;;;;;;;;;2436:3;2388:51;;6326:106:84;;;;;;;;;;-1:-1:-1;6406:18:84;;;;6372:7;6398:27;;;:7;:27;;;;;;6326:106;;1684:45:85;;;;;;;;;;;;1725:4;1684:45;;1577:36:84;;;;;;;;;;-1:-1:-1;1577:36:84;;;;;;;;;;;1557:10:104;1545:23;;;1527:42;;1515:2;1500:18;1577:36:84;1383:192:104;1687:33:84;;;;;;;;;;-1:-1:-1;1687:33:84;;;;;;;;;;;19662:402:85;;;;;;;;;;;;;:::i;8299:3024::-;;;;;;:::i;:::-;;:::i;:::-;;5719:489:84;;;;;;;;;;-1:-1:-1;5719:489:84;;;;;:::i;:::-;;:::i;15457:464:85:-;;;;;;;;;;-1:-1:-1;15457:464:85;;;;;:::i;:::-;;:::i;1013:35:84:-;;;;;;;;;;;;;;;1118:31;;;;;;;;;;;;;;;976:28:85;;;;;;;;;;;;;;;;2048:52;;;;;;;;;;;;2099:1;2048:52;;19160:362;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;26030:245::-;;;;;;;;;;-1:-1:-1;26030:245:85;;;;;:::i;:::-;26213:54;;;;;;;15828:19:104;;;;15863:12;;;15856:28;;;;15935:66;15922:2;15918:15;;;15914:88;15900:12;;;15893:110;;;;16019:12;;;;16012:28;;;;26213:54:85;;;;;;;;;;16056:13:104;;26213:54:85;;;26203:65;;;;;;26030:245;709:114:84;;;;;;;;;;-1:-1:-1;709:114:84;756:66;709:114;;1043:23:85;;;;;;;;;;;;;;;;20223:205;;;;;;;;;;-1:-1:-1;20223:205:85;;;;;:::i;:::-;;:::i;1337:42:84:-;;;;;;;;;;-1:-1:-1;1337:42:84;;;;;:::i;:::-;;;;;;;;;;;;;;2815:45:85;;;;;;;;;;-1:-1:-1;2815:45:85;;;;;:::i;:::-;;;;;;;;;;;;;;;;2697:44;;;;;;;;;;-1:-1:-1;2697:44:85;;;;;:::i;:::-;;;;;;;;;;;;;;;;13304:1955;;;;;;;;;;-1:-1:-1;13304:1955:85;;;;;:::i;:::-;;:::i;3451:42::-;;;;;;;;;;;;3490:3;3451:42;;20706:335;;;;;;;;;;-1:-1:-1;20706:335:85;;;;;:::i;:::-;;:::i;:::-;;;;6999:25:104;;;7055:2;7040:18;;7033:34;;;;7083:18;;;7076:34;6987:2;6972:18;20706:335:85;6797:319:104;11483:1341:85;;;;;;:::i;:::-;;:::i;21625:343::-;;;;;;;;;;;;;:::i;:::-;;;;7352:25:104;;;7408:2;7393:18;;7386:34;;;;7436:18;;;7429:34;7494:2;7479:18;;7472:34;7339:3;7324:19;21625:343:85;7121:391:104;22321:177:85;;;;;;;;;;;;;:::i;1450:45:84:-;;;;;;;;;;;;1493:2;1450:45;;882:49;;;;;;;;;;;;929:2;882:49;;16056:297:85;;;;;;;;;;-1:-1:-1;16056:297:85;;;;;:::i;:::-;;:::i;2500:37::-;;;;;;;;;;;;;;;1254:52;;;;;;;;;;;;1303:3;1254:52;;1119:42;;;;;;;;;;;;1158:3;1119:42;;6619:3632:84;;;;;;;;;;-1:-1:-1;6619:3632:84;;;;;:::i;:::-;;:::i;1224:51::-;;;;;;;;;;-1:-1:-1;1224:51:84;;;;;:::i;:::-;;;;;;;;;;;;;;3329:55:85;;;;;;;;;;-1:-1:-1;3329:55:85;;;;;:::i;:::-;;;;;;;;;;;;;;22863:361;;;;;;:::i;:::-;;:::i;2157:55::-;;;;;;;;;;;;2211:1;2157:55;;16540:240;;;;;;;;;;-1:-1:-1;16540:240:85;;;;;:::i;:::-;;:::i;23488:575::-;;;;;;;;;;-1:-1:-1;23488:575:85;;;;;:::i;:::-;;:::i;22603:106::-;22648:4;22690:12;22695:7;22690:1;:12;:::i;:::-;22671:15;;;;;;;:31;;;;-1:-1:-1;22603:106:85:o;22105:94::-;22154:7;22180:12;22185:7;22180:1;:12;:::i;:::-;22173:19;;22105:94;:::o;3339:436:84:-;3414:7;547:77;3437:28;;3433:115;;3488:49;;;;;;;;352:25:104;;;325:18;;3488:49:84;;;;;;;;3433:115;547:77;3561:29;;3557:118;;3613:51;;;;;;;;352:25:104;;;325:18;;3613:51:84;206:177:104;3557:118:84;3691:77;3707:8;:15;;;3723:20;3737:5;3723:13;:20::i;:::-;3745:21;3759:6;3745:13;:21::i;:::-;3707:60;;;;;;;;;;;;;11563:25:104;;;;11604:18;;;11597:34;11536:18;;3707:60:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1117:1:73;1012:122;3691:77:84;3684:84;;3339:436;;;;;:::o;19662:402:85:-;19760:15;;19719:7;;19760:15;;;;;1792:2;19789:34;;19785:273;;;1725:4;19839:21;;;19662:402;:::o;19785:273::-;1848:2;19896:11;:35;19892:166;;;1660:4;19947:22;;;19662:402;:::o;19892:166::-;20026:1;20019:8;;;19662:402;:::o;8299:3024::-;2500:21:58;:19;:21::i;:::-;8391::85::1;::::0;8471:9;8457:31:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;8457:31:85::1;-1:-1:-1::0;8426:62:85;-1:-1:-1;8498:27:85::1;8541:9:::0;8528:30:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;8528:30:85::1;-1:-1:-1::0;8498:60:85;-1:-1:-1;8606:9:85::1;8601:1564;8621:20:::0;;::::1;8601:1564;;;8662:20;8685:9;;8695:1;8685:12;;;;;;;:::i;:::-;;;::::0;;;::::1;8849:14;::::0;;::::1;;8835:29;::::0;;;:13:::1;:29;::::0;;;8685:12;;-1:-1:-1;8835:29:85::1;;8831:120;::::0;-1:-1:-1;8831:120:85::1;;8921:14;8891:45:::0;;::::1;::::0;;8921:14;;::::1;;8891:45;::::0;::::1;352:25:104::0;325:18;;8891:45:85::1;206:177:104::0;8831:120:85::1;9011:27;1158:3;9055:13;;9042:3;:10;;;:26;;;;:::i;:::-;9041:43;;;;:::i;:::-;9011:73;;9098:16;9139:8;;9117:19;:30;;;;:::i;:::-;9098:49;;9237:8;9223:3;:10;;;:22;9219:139;;9272:71;::::0;::::1;::::0;;9313:10:::1;::::0;::::1;;9272:71;::::0;::::1;11563:25:104::0;11604:18;;;11597:34;;;11536:18;;9272:71:85::1;11337:300:104::0;9219:139:85::1;9432:1;9411:9;;::::0;::::1;:3:::0;:9:::1;:::i;:::-;:23;;::::0;9407:494:::1;;9454:27;9471:10;::::0;::::1;;9454:27:::0;::::1;:::i;:::-;;;9407:494;;;9561:73;9596:10;9616:4;9623:10;::::0;::::1;::::0;::::1;::::0;9568:9:::1;::::0;9623:3;9568:9:::1;:::i;:::-;9561:34;;::::0;:73;;:34:::1;:73::i;:::-;9720:12:::0;;9716:171:::1;;9787:10;::::0;9756:52:::1;::::0;9787:10:::1;;9799:8:::0;9763:9:::1;;::::0;::::1;:3:::0;:9:::1;:::i;:::-;9756:30;;::::0;:52;:30:::1;:52::i;:::-;9848:9;;::::0;::::1;:3:::0;:9:::1;:::i;:::-;9835:33;;;9859:8;9835:33;;;;352:25:104::0;;340:2;325:18;;206:177;9835:33:85::1;;;;;;;;9716:171;9978:14;::::0;;::::1;;9964:29;::::0;;;:13:::1;:29;::::0;;;;;:36;;;::::1;9996:4;9964:36;::::0;;10014:14;;:11;;10026:1;;10014:14;::::1;;;;;:::i;:::-;;;;;;:31;;;::::0;::::1;10131:23;10139:3;:14;;;10131:7;:23::i;:::-;10114:11;10126:1;10114:14;;;;;;;;:::i;:::-;:40;::::0;;;::::1;:14;::::0;;::::1;::::0;;;;;;;:40;-1:-1:-1;;;8643:3:85::1;;8601:1564;;;;10248:9;10231:13;:26;10227:137;;10280:73;::::0;::::1;::::0;;::::1;::::0;::::1;11563:25:104::0;;;10342:9:85::1;11604:18:104::0;;;11597:34;11536:18;;10280:73:85::1;11337:300:104::0;10227:137:85::1;10455:9;10450:760;10470:20:::0;;::::1;10450:760;;;10511:20;10534:9;;10544:1;10534:12;;;;;;;:::i;:::-;;;::::0;;;::::1;::::0;-1:-1:-1;10585:1:85::1;::::0;-1:-1:-1;10564:9:85::1;;::::0;::::1;10534:12:::0;10564:9:::1;:::i;:::-;:23;;::::0;10560:640:::1;;10607:27;1158:3;10651:13;;10638:3;:10;;;:26;;;;:::i;:::-;10637:43;;;;:::i;:::-;10607:73;;10698:16;10739:8;;10717:19;:30;;;;:::i;:::-;10698:49:::0;-1:-1:-1;10770:12:85;;10766:420:::1;;10814:10;::::0;:24:::1;:10;10806:71;;;::::0;::::1;::::0;;13353:2:104;10806:71:85::1;::::0;::::1;13335:21:104::0;13392:2;13372:18;;;13365:30;13431:34;13411:18;;;13404:62;13502:4;13482:18;;;13475:32;13524:19;;10806:71:85::1;13151:398:104::0;10806:71:85::1;10917:10;::::0;:36:::1;::::0;10900:12:::1;::::0;10917:10:::1;;::::0;10940:8;;10900:12;10917:36;10900:12;10917:36;10940:8;10917:10;:36:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10899:54;;;10980:7;10975:133;;11055:10;::::0;11022:63:::1;::::0;::::1;::::0;;11055:10:::1;::::0;;::::1;11022:63;::::0;::::1;13938:74:104::0;14028:18;;;14021:34;;;13911:18;;11022:63:85::1;13764:297:104::0;10975:133:85::1;11147:9;;::::0;::::1;:3:::0;:9:::1;:::i;:::-;11134:33;;;11158:8;11134:33;;;;352:25:104::0;;340:2;325:18;;206:177;11134:33:85::1;;;;;;;;10784:402;10766:420;10589:611;;10560:640;-1:-1:-1::0;10492:3:85::1;;10450:760;;;;11261:55;11274:11;11287;11300:15;11261:55;;;;;;;;:::i;:::-;;;;;;;;8381:2942;;;2542:20:58::0;1857:1;3068:7;:21;2888:208;2542:20;8299:3024:85;;:::o;5719:489:84:-;5776:4;5796:5;5792:62;;-1:-1:-1;5838:5:84;;5719:489;-1:-1:-1;5719:489:84:o;5792:62::-;5890:18;;;;;5956:224;5986:10;;;;;;;:7;:10;;;;;;5977:19;;5973:69;;-1:-1:-1;6023:4:84;;5719:489;-1:-1:-1;;;5719:489:84:o;5973:69::-;6059:1;:6;;6064:1;6059:6;6055:66;;-1:-1:-1;1493:2:84;6055:66;6134:3;;;;:::i;:::-;;;;6161:17;6156:22;;:1;:22;;;5956:224;;-1:-1:-1;6196:5:84;;5719:489;-1:-1:-1;;;5719:489:84:o;15457:464:85:-;6958:10;;;;6944;:24;6940:77;;6991:15;;;;;;;;;;;;;;6940:77;1303:3:::1;15627:14;:39;15623:168;;;15689:91;::::0;::::1;::::0;;1303:3:::1;15689:91;::::0;::::1;11563:25:104::0;11604:18;;;11597:34;;;11536:18;;15689:91:85::1;11337:300:104::0;15623:168:85::1;15801:13;:30:::0;;;15841:8:::1;:20:::0;;;15877:37:::1;::::0;;11563:25:104;;;11619:2;11604:18;;11597:34;;;15877:37:85::1;::::0;11536:18:104;15877:37:85::1;;;;;;;15457:464:::0;;:::o;19160:362::-;19252:15;;19212:13;;19252:15;;;;;1438:2;19281:30;;19277:58;;;-1:-1:-1;;19313:22:85;;;;;;;;;;;;;;;;;;19160:362::o;19277:58::-;1499:2;19349:4;:33;19345:64;;;-1:-1:-1;;19384:25:85;;;;;;;;;;;;;;;;;;19160:362::o;19345:64::-;1558:3;19423:4;:31;19419:60;;;-1:-1:-1;;19456:23:85;;;;;;;;;;;;;;;;;;19160:362::o;19419:60::-;-1:-1:-1;;19489:26:85;;;;;;;;;;;;;;;;;;19160:362::o;20223:205::-;20285:7;20304:27;1158:3;20345:13;;20335:7;:23;;;;:::i;:::-;20334:40;;;;:::i;:::-;20304:70;;20413:8;;20391:19;:30;;;;:::i;:::-;20384:37;20223:205;-1:-1:-1;;;20223:205:85:o;13304:1955::-;2500:21:58;:19;:21::i;:::-;13606:41:85;;::::1;;::::0;:78:::1;;-1:-1:-1::0;13651:33:85;;::::1;;13606:78;13602:203;;;13707:87;::::0;::::1;::::0;;::::1;::::0;::::1;11563:25:104::0;;;11604:18;;;11597:34;;;11536:18;;13707:87:85::1;11337:300:104::0;13602:203:85::1;13867:9;13862:272;13882:27:::0;;::::1;13862:272;;;13934:12;:33;13947:16;;13964:1;13947:19;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;13934:33:::0;;-1:-1:-1;13934:33:85;::::1;::::0;;;;;;-1:-1:-1;13934:33:85;;::::1;;13930:140;;;14034:16;;14051:1;14034:19;;;;;;;:::i;:::-;;;;;;;13994:61;;;;;;;;;352:25:104::0;;340:2;325:18;;206:177;13930:140:85::1;14119:4;14083:12;:33;14096:16;;14113:1;14096:19;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;14083:33:::0;;-1:-1:-1;14083:33:85;::::1;::::0;;;;;;-1:-1:-1;14083:33:85;:40;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;13911:3:85::1;13862:272;;;;14192:18;14204:5;14192:11;:18::i;:::-;14187:90;;14233:33;::::0;::::1;::::0;;::::1;::::0;::::1;352:25:104::0;;;325:18;;14233:33:85::1;206:177:104::0;14187:90:85::1;14342:29;14374:76;14395:5;14402:16;;14420:10;14432:7;;14441:8;;14374:20;:76::i;:::-;14499:39;::::0;;;;14342:108;;-1:-1:-1;14499:17:85::1;:10;:17;::::0;::::1;::::0;:39:::1;::::0;14517:6;;;;14342:108;;14499:39:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14494:107;;14561:29;;;;;;;;;;;;;;14494:107;14655:9;14650:495;14670:18:::0;;::::1;14650:495;;;14735:1;14713:7:::0;;14721:1;14713:10;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:24;;::::0;14709:426:::1;;14790:12;14807:10;:15;;14830:8;;14839:1;14830:11;;;;;;;:::i;:::-;;;;;;;14807:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14789:57;;;14869:7;14864:128;;14940:10;14960:8;;14969:1;14960:11;;;;;;;:::i;:::-;14907:66;::::0;::::1;::::0;;13968:42:104;13956:55;;;14907:66:85::1;::::0;::::1;13938:74:104::0;14960:11:85::1;;::::0;;;::::1;;14028:18:104::0;;;14021:34;-1:-1:-1;13911:18:104;;14907:66:85::1;13764:297:104::0;14864:128:85::1;14739:267;14709:426;;;15064:56;15096:10;15108:8;;15117:1;15108:11;;;;;;;:::i;:::-;;;;;;;15071:7;;15079:1;15071:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;15064:56::-;14690:3;;14650:495;;;;15204:10;15193:59;;;15216:16;;15234:7;;15243:8;;15193:59;;;;;;;;;;;:::i;:::-;;;;;;;;13558:1701;2542:20:58::0;1857:1;3068:7;:21;2888:208;2542:20;13304:1955:85;;;;;;;;;;:::o;20706:335::-;20795:27;20824:22;20848:16;1158:3;20913:13;;20903:7;:23;;;;:::i;:::-;20902:40;;;;:::i;:::-;20969:8;;20880:62;;-1:-1:-1;20969:8:85;-1:-1:-1;20998:36:85;20969:8;20880:62;20998:36;:::i;:::-;20706:335;;;;-1:-1:-1;;20706:335:85:o;11483:1341::-;2500:21:58;:19;:21::i;:::-;11617:26:85::1;::::0;;;:13:::1;:26;::::0;;;;;::::1;;11613:106;;;11666:42;::::0;::::1;::::0;;::::1;::::0;::::1;352:25:104::0;;;325:18;;11666:42:85::1;206:177:104::0;11613:106:85::1;11771:27;1158:3;11814:13;;11802:9;:25;;;;:::i;:::-;11801:42;;;;:::i;:::-;11771:72;;11853:16;11894:8;;11872:19;:30;;;;:::i;:::-;11853:49;;11983:8;11970:9;:21;11966:129;;12014:70;::::0;::::1;::::0;;12055:9:::1;12014:70;::::0;::::1;11563:25:104::0;11604:18;;;11597:34;;;11536:18;;12014:70:85::1;11337:300:104::0;11966:129:85::1;12150:26;::::0;;;:13:::1;:26;::::0;;;;:33;;;::::1;12179:4;12150:33;::::0;;12263:20:::1;12164:11:::0;12263:7:::1;:20::i;:::-;12244:39:::0;-1:-1:-1;12357:12:85;;12353:365:::1;;12393:10;::::0;:24:::1;:10;12385:71;;;::::0;::::1;::::0;;13353:2:104;12385:71:85::1;::::0;::::1;13335:21:104::0;13392:2;13372:18;;;13365:30;13431:34;13411:18;;;13404:62;13502:4;13482:18;;;13475:32;13524:19;;12385:71:85::1;13151:398:104::0;12385:71:85::1;12488:10;::::0;:36:::1;::::0;12471:12:::1;::::0;12488:10:::1;;::::0;12511:8;;12471:12;12488:36;12471:12;12488:36;12511:8;12488:10;:36:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12470:54;;;12543:7;12538:117;;12610:10;::::0;12577:63:::1;::::0;::::1;::::0;;12610:10:::1;::::0;;::::1;12577:63;::::0;::::1;13938:74:104::0;14028:18;;;14021:34;;;13911:18;;12577:63:85::1;13764:297:104::0;12538:117:85::1;12673:34;::::0;352:25:104;;;12694:1:85::1;::::0;12673:34:::1;::::0;340:2:104;325:18;12673:34:85::1;;;;;;;12371:347;12353:365;12763:54;::::0;;19002:10:104;18990:23;;18972:42;;12801:15:85::1;19045:2:104::0;19030:18;;19023:34;12777:11:85;;12763:54:::1;::::0;18945:18:104;12763:54:85::1;;;;;;;11551:1273;;;2542:20:58::0;1857:1;3068:7;:21;2888:208;2542:20;11483:1341:85;:::o;21625:343::-;21825:15;;;;;;;;21696:21;;;21864:15;6406:18:84;;;;6372:7;6398:27;;;:7;:27;;;;;;;6326:106;21864:15:85;21850:29;;21912:13;;21889:36;;21953:8;;21935:26;;21625:343;;;;:::o;22321:177::-;22374:7;;22411:12;22416:7;22411:1;:12;:::i;:::-;22441:15;;22393:30;;-1:-1:-1;22393:30:85;;22441:39;;2436:3;;22441:15;;;;;:39;:::i;:::-;22440:51;;;;:::i;:::-;22433:58;;;22321:177;:::o;16056:297::-;6958:10;;;;6944;:24;6940:77;;6991:15;;;;;;;;;;;;;;6940:77;16137:28:::1;::::0;::::1;16133:89;;16188:23;;;;;;;;;;;;;;16133:89;16249:10;::::0;;::::1;16269:27:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;16312:34:::1;::::0;16249:10;::::1;::::0;16269:27;16249:10;;16312:34:::1;::::0;16232:14:::1;::::0;16312:34:::1;16123:230;16056:297:::0;:::o;6619:3632:84:-;6666:7;6689:1;6694;6689:6;6685:3559;;-1:-1:-1;6712:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6685:3559::-;6798:1;6803;6798:6;6794:3450;;-1:-1:-1;6821:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6794:3450::-;6907:1;6912;6907:6;6903:3341;;-1:-1:-1;6930:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;6903:3341::-;7016:1;7021;7016:6;7012:3232;;-1:-1:-1;7039:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7012:3232::-;7125:1;7130;7125:6;7121:3123;;-1:-1:-1;7148:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7121:3123::-;7234:1;7239;7234:6;7230:3014;;-1:-1:-1;7257:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7230:3014::-;7343:1;7348;7343:6;7339:2905;;-1:-1:-1;7366:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7339:2905::-;7452:1;7457;7452:6;7448:2796;;-1:-1:-1;7475:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7448:2796::-;7561:1;7566;7561:6;7557:2687;;-1:-1:-1;7584:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7557:2687::-;7670:1;7675;7670:6;7666:2578;;-1:-1:-1;7693:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7666:2578::-;7779:1;7784:2;7779:7;7775:2469;;-1:-1:-1;7803:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7775:2469::-;7889:1;7894:2;7889:7;7885:2359;;-1:-1:-1;7913:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7885:2359::-;7999:1;8004:2;7999:7;7995:2249;;-1:-1:-1;8023:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;7995:2249::-;8109:1;8114:2;8109:7;8105:2139;;-1:-1:-1;8133:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8105:2139::-;8219:1;8224:2;8219:7;8215:2029;;-1:-1:-1;8243:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8215:2029::-;8329:1;8334:2;8329:7;8325:1919;;-1:-1:-1;8353:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8325:1919::-;8439:1;8444:2;8439:7;8435:1809;;-1:-1:-1;8463:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8435:1809::-;8549:1;8554:2;8549:7;8545:1699;;-1:-1:-1;8573:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8545:1699::-;8659:1;8664:2;8659:7;8655:1589;;-1:-1:-1;8683:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8655:1589::-;8769:1;8774:2;8769:7;8765:1479;;-1:-1:-1;8793:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8765:1479::-;8879:1;8884:2;8879:7;8875:1369;;-1:-1:-1;8903:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8875:1369::-;8989:1;8994:2;8989:7;8985:1259;;-1:-1:-1;9013:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;8985:1259::-;9099:1;9104:2;9099:7;9095:1149;;-1:-1:-1;9123:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9095:1149::-;9209:1;9214:2;9209:7;9205:1039;;-1:-1:-1;9233:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9205:1039::-;9319:1;9324:2;9319:7;9315:929;;-1:-1:-1;9343:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9315:929::-;9429:1;9434:2;9429:7;9425:819;;-1:-1:-1;9453:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9425:819::-;9539:1;9544:2;9539:7;9535:709;;-1:-1:-1;9563:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9535:709::-;9649:1;9654:2;9649:7;9645:599;;-1:-1:-1;9673:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9645:599::-;9759:1;9764:2;9759:7;9755:489;;-1:-1:-1;9783:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9755:489::-;9869:1;9874:2;9869:7;9865:379;;-1:-1:-1;9893:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9865:379::-;9979:1;9984:2;9979:7;9975:269;;-1:-1:-1;10003:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;9975:269::-;10089:1;10094:2;10089:7;10085:159;;-1:-1:-1;10113:66:84;;6619:3632;-1:-1:-1;6619:3632:84:o;10085:159::-;10202:42;;;;;;;;352:25:104;;;325:18;;10202:42:84;206:177:104;10085:159:84;6619:3632;;;:::o;22863:361:85:-;22951:1;22939:9;:13;22931:39;;;;;;;19270:2:104;22931:39:85;;;19252:21:104;19309:2;19289:18;;;19282:30;19348:15;19328:18;;;19321:43;19381:18;;22931:39:85;19068:337:104;22931:39:85;22988:37;;;;:20;:37;;;;;;:42;22980:80;;;;;;;19612:2:104;22980:80:85;;;19594:21:104;19651:2;19631:18;;;19624:30;19690:27;19670:18;;;19663:55;19735:18;;22980:80:85;19410:349:104;22980:80:85;23071:37;;;;:20;:37;;;;;;;;;23111:15;23071:55;;;;23141:76;;23190:9;11563:25:104;;11604:18;;;11597:34;23178:10:85;;23071:37;;23141:76;;11536:18:104;23141:76:85;;;;;;;22863:361;:::o;16540:240::-;16599:7;16622:20;;;16618:156;;-1:-1:-1;16665:21:85;;16540:240;-1:-1:-1;16540:240:85:o;16618:156::-;16724:39;;;;;16757:4;16724:39;;;534:74:104;16724:24:85;;;;;;507:18:104;;16724:39:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23488:575::-;26213:54;;;;;;;15828:19:104;;;15863:12;;;15856:28;;;15922:2;15918:15;;;15935:66;15914:88;15900:12;;;15893:110;16019:12;;;;16012:28;;;26213:54:85;;;;;;;;;;16056:13:104;;;;26213:54:85;;;26203:65;;;;;23593:18;;23742:1;23707:32;;;:20;:32;;;;;;23593:95;;-1:-1:-1;23699:69:85;;;;;;;20201:2:104;23699:69:85;;;20183:21:104;20240:2;20220:18;;;20213:30;20279:22;20259:18;;;20252:50;20319:18;;23699:69:85;19999:344:104;23699:69:85;23805:32;;;;:20;:32;;;;;;:47;;3490:3;;23805:47;:::i;:::-;23786:15;:66;;23778:99;;;;;;;20550:2:104;23778:99:85;;;20532:21:104;20589:2;20569:18;;;20562:30;20628:22;20608:18;;;20601:50;20668:18;;23778:99:85;20348:344:104;23778:99:85;23931:32;;;;:20;:32;;;;;23924:39;24012:44;24028:6;24036:7;23952:10;24012:15;:44::i;:::-;23583:480;23488:575;;;;:::o;863:143:73:-;966:1;986:13;966:1;986:10;:13::i;2575:307:58:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1670:188:50:-;1797:53;;1812:18;20917:55:104;;;1797:53:50;;;20899:74:104;21009:55;;;20989:18;;;20982:83;21081:18;;;21074:34;;;1770:81:50;;1790:5;;1812:18;;;;;20872::104;;1797:53:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;1271:160::-;1380:43;;1395:14;13956:55:104;;;1380:43:50;;;13938:74:104;14028:18;;;14021:34;;;1353:71:50;;1373:5;;1395:14;;;;;13911:18:104;;1380:43:50;13764:297:104;1353:71:50;1271:160;;;:::o;4029:1503:84:-;4127:15;;4079:12;;4127:15;;;;;4174:20;4187:7;4181:1;4174:20;:::i;:::-;4156:38;;:14;:38;;;4152:129;;4217:53;;;;;1557:10:104;1545:23;;4217:53:84;;;1527:42:104;1500:18;;4217:53:84;1383:192:104;4152:129:84;4312:14;4358:5;4290:19;;;4419:816;4442:7;4438:11;;:1;:11;;;4419:816;;;4563:16;4578:1;4563:12;:16;:::i;:::-;:21;;4583:1;4563:21;4559:469;;4611:11;4604:18;;4648:8;4654:1;4648:8;;:5;:8::i;:::-;4793:19;;;;;;;:16;:19;;;;;:33;;;4640:16;-1:-1:-1;4559:469:84;;;4957:19;;;;;;;:16;:19;;;;;;;-1:-1:-1;5002:11:84;;-1:-1:-1;4559:469:84;5117:26;5131:4;5137:5;5117:13;:26::i;:::-;5103:40;-1:-1:-1;5207:17:84;5223:1;5207:17;;:::i;:::-;;-1:-1:-1;4451:3:84;;4419:816;;;-1:-1:-1;5317:18:84;;5294:19;;1493:2;;5317:22;;:18;;;:22;:::i;:::-;5316:44;;;;:::i;:::-;5370:18;:33;;;;;;;;;;;;;-1:-1:-1;5413:21:84;;;:7;:21;;;;;:35;;;5370:33;-1:-1:-1;5476:18:84;:14;-1:-1:-1;5476:18:84;:::i;:::-;5458:15;:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;5511:14:84;;4029:1503;-1:-1:-1;;;;;;4029:1503:84:o;17165:1642:85:-;17558:33;;;1965:2;17558:33;;;;;;;;;17393:16;;17526:29;;17558:33;;;;;;;;;;;-1:-1:-1;17558:33:85;17526:65;;17619:5;17601:12;17614:1;17601:15;;;;;;;;:::i;:::-;;;;;;;;;;:23;17692:9;17687:257;2099:1;17707;:28;17687:257;;;17760:27;;;17756:178;;;17829:16;;17846:1;17829:19;;;;;;;:::i;:::-;;;;;;;17807:12;17824:1;17820;:5;;;;:::i;:::-;17807:19;;;;;;;;:::i;:::-;;;;;;:41;;;;;17756:178;;;17917:1;17887:12;17900:5;17904:1;17900;:5;:::i;:::-;17887:19;;;;;;;;:::i;:::-;;;;;;:32;;;;;17756:178;17737:3;;17687:257;;;;18021:10;18005:28;;17997:37;;17979:12;17992:1;17979:15;;;;;;;;:::i;:::-;;;;;;;;;;:55;18101:9;18096:318;2099:1;18116;:28;18096:318;;;18169:18;;;18165:239;;;18279:7;;18287:1;18279:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18263:28;;18207:12;18220:31;18250:1;2211;18220:31;:::i;:::-;18207:45;;;;;;;;:::i;:::-;;;;;;:85;;;;;18165:239;;;18387:1;18331:12;18344:31;18374:1;2211;18344:31;:::i;:::-;18331:45;;;;;;;;:::i;:::-;;;;;;:58;;;;;18165:239;18146:3;;18096:318;;;-1:-1:-1;18472:9:85;18467:304;2099:1;18487;:28;18467:304;;;18540:19;;;18536:225;;;18636:8;;18645:1;18636:11;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;18579:12:85;18592:32;18623:1;2325;18592:32;:::i;:::-;18579:46;;;;;;;;:::i;:::-;;;;;;:69;;;;;18536:225;;;18744:1;18687:12;18700:32;18731:1;2325;18700:32;:::i;:::-;18687:46;;;;;;;;:::i;:::-;;;;;;:59;;;;;18536:225;18517:3;;18467:304;;;-1:-1:-1;18788:12:85;17165:1642;-1:-1:-1;;;;;;;;;17165:1642:85:o;24147:1824::-;24301:26;;;;:13;:26;;;;;;;;24297:106;;;24350:42;;;;;;;;352:25:104;;;325:18;;24350:42:85;206:177:104;24297:106:85;24455:27;1158:3;24496:13;;24486:7;:23;;;;:::i;:::-;24485:40;;;;:::i;:::-;24455:70;;24535:16;24576:8;;24554:19;:30;;;;:::i;:::-;24535:49;;24663:8;24652:7;:19;24648:125;;24694:68;;;;;;;;11563:25:104;;;11604:18;;;11597:34;;;11536:18;;24694:68:85;11337:300:104;24648:125:85;24820:20;;;;24816:344;;24856:67;:31;;;24888:10;24908:4;24915:7;24856:31;:67::i;:::-;25001:12;;24997:153;;25061:10;;25033:49;;25061:10;25033:27;;;;25061:10;25073:8;25033:27;:49::i;:::-;25118:6;25105:30;;;25126:8;25105:30;;;;352:25:104;;340:2;325:18;;206:177;25105:30:85;;;;;;;;24997:153;25215:26;;;;:13;:26;;;;;:33;;;;25244:4;25215:33;;;25328:20;25229:11;25328:7;:20::i;:::-;25309:39;-1:-1:-1;25426:20:85;;;25422:443;;25466:12;;25462:393;;25506:10;;:24;:10;25498:71;;;;;;;13353:2:104;25498:71:85;;;13335:21:104;13392:2;13372:18;;;13365:30;13431:34;13411:18;;;13404:62;13502:4;13482:18;;;13475:32;13524:19;;25498:71:85;13151:398:104;25498:71:85;25605:10;;:36;;25588:12;;25605:10;;;25628:8;;25588:12;25605:36;25588:12;25605:36;25628:8;25605:10;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25587:54;;;25664:7;25659:125;;25735:10;;25702:63;;;;;25735:10;;;;25702:63;;;13938:74:104;14028:18;;;14021:34;;;13911:18;;25702:63:85;13764:297:104;25659:125:85;25806:34;;352:25:104;;;25827:1:85;;25806:34;;340:2:104;325:18;25806:34:85;;;;;;;25480:375;25462:393;25910:54;;;19002:10:104;18990:23;;18972:42;;25948:15:85;19045:2:104;19030:18;;19023:34;25924:11:85;;25910:54;;18945:18:104;25910:54:85;;;;;;;24235:1736;;;24147:1824;;;:::o;339:131:73:-;163:66;423:1;405:28;397:66;;;;;;;22019:2:104;397:66:73;;;22001:21:104;22058:2;22038:18;;;22031:30;22097:27;22077:18;;;22070:55;22142:18;;397:66:73;21817:349:104;7738:720:50;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;-1:-1:-1;;8284:1:50;8278:8;8234:16;;-1:-1:-1;8310:15:50;;:68;;8362:11;8377:1;8362:16;;8310:68;;;8328:26;;;;:31;8310:68;8306:146;;;8401:40;;;;;564:42:104;552:55;;8401:40:50;;;534:74:104;507:18;;8401:40:50;388:226:104;619:346;687:6;695;748:2;736:9;727:7;723:23;719:32;716:52;;;764:1;761;754:12;716:52;-1:-1:-1;;809:23:104;;;929:2;914:18;;;901:32;;-1:-1:-1;619:346:104:o;1152:226::-;1211:6;1264:2;1252:9;1243:7;1239:23;1235:32;1232:52;;;1280:1;1277;1270:12;1232:52;-1:-1:-1;1325:23:104;;1152:226;-1:-1:-1;1152:226:104:o;1580:641::-;1694:6;1702;1755:2;1743:9;1734:7;1730:23;1726:32;1723:52;;;1771:1;1768;1761:12;1723:52;1811:9;1798:23;1844:18;1836:6;1833:30;1830:50;;;1876:1;1873;1866:12;1830:50;1899:22;;1952:4;1944:13;;1940:27;-1:-1:-1;1930:55:104;;1981:1;1978;1971:12;1930:55;2021:2;2008:16;2047:18;2039:6;2036:30;2033:50;;;2079:1;2076;2069:12;2033:50;2135:7;2130:2;2122:4;2114:6;2110:17;2106:2;2102:26;2098:35;2095:48;2092:68;;;2156:1;2153;2146:12;2092:68;2187:2;2179:11;;;;;2209:6;;-1:-1:-1;1580:641:104;-1:-1:-1;;;1580:641:104:o;2827:477::-;2976:2;2965:9;2958:21;2939:4;3008:6;3002:13;3051:6;3046:2;3035:9;3031:18;3024:34;3110:6;3105:2;3097:6;3093:15;3088:2;3077:9;3073:18;3067:50;3166:1;3161:2;3152:6;3141:9;3137:22;3133:31;3126:42;3295:2;3225:66;3220:2;3212:6;3208:15;3204:88;3193:9;3189:104;3185:113;3177:121;;;2827:477;;;;:::o;3309:154::-;3395:42;3388:5;3384:54;3377:5;3374:65;3364:93;;3453:1;3450;3443:12;3468:608;3554:6;3562;3570;3578;3631:3;3619:9;3610:7;3606:23;3602:33;3599:53;;;3648:1;3645;3638:12;3599:53;3687:9;3674:23;3706:31;3731:5;3706:31;:::i;:::-;3756:5;3834:2;3819:18;;3806:32;;-1:-1:-1;3937:2:104;3922:18;;3909:32;;4040:2;4025:18;4012:32;;-1:-1:-1;3468:608:104;-1:-1:-1;;;3468:608:104:o;4312:347::-;4363:8;4373:6;4427:3;4420:4;4412:6;4408:17;4404:27;4394:55;;4445:1;4442;4435:12;4394:55;-1:-1:-1;4468:20:104;;4511:18;4500:30;;4497:50;;;4543:1;4540;4533:12;4497:50;4580:4;4572:6;4568:17;4556:29;;4632:3;4625:4;4616:6;4608;4604:19;4600:30;4597:39;4594:59;;;4649:1;4646;4639:12;4594:59;4312:347;;;;;:::o;4664:367::-;4727:8;4737:6;4791:3;4784:4;4776:6;4772:17;4768:27;4758:55;;4809:1;4806;4799:12;4758:55;-1:-1:-1;4832:20:104;;4875:18;4864:30;;4861:50;;;4907:1;4904;4897:12;4861:50;4944:4;4936:6;4932:17;4920:29;;5004:3;4997:4;4987:6;4984:1;4980:14;4972:6;4968:27;4964:38;4961:47;4958:67;;;5021:1;5018;5011:12;5036:142;5112:20;;5141:31;5112:20;5141:31;:::i;5183:1609::-;5387:6;5395;5403;5411;5419;5427;5435;5443;5451;5459;5512:3;5500:9;5491:7;5487:23;5483:33;5480:53;;;5529:1;5526;5519:12;5480:53;5569:9;5556:23;5602:18;5594:6;5591:30;5588:50;;;5634:1;5631;5624:12;5588:50;5673:58;5723:7;5714:6;5703:9;5699:22;5673:58;:::i;:::-;5750:8;;-1:-1:-1;5647:84:104;-1:-1:-1;;5854:2:104;5839:18;;5826:32;;-1:-1:-1;5935:2:104;5920:18;;5907:32;5964:18;5951:32;;5948:52;;;5996:1;5993;5986:12;5948:52;6035:72;6099:7;6088:8;6077:9;6073:24;6035:72;:::i;:::-;6126:8;;-1:-1:-1;6009:98:104;-1:-1:-1;6180:46:104;;-1:-1:-1;6222:2:104;6207:18;;6180:46;:::i;:::-;6170:56;;6279:3;6268:9;6264:19;6251:33;6309:18;6299:8;6296:32;6293:52;;;6341:1;6338;6331:12;6293:52;6380:72;6444:7;6433:8;6422:9;6418:24;6380:72;:::i;:::-;6471:8;;-1:-1:-1;6354:98:104;-1:-1:-1;;6559:3:104;6544:19;;6531:33;6589:18;6576:32;;6573:52;;;6621:1;6618;6611:12;6573:52;6660:72;6724:7;6713:8;6702:9;6698:24;6660:72;:::i;:::-;6634:98;;6751:8;6741:18;;;6778:8;6768:18;;;5183:1609;;;;;;;;;;;;;:::o;7517:247::-;7576:6;7629:2;7617:9;7608:7;7604:23;7600:32;7597:52;;;7645:1;7642;7635:12;7597:52;7684:9;7671:23;7703:31;7728:5;7703:31;:::i;8019:608::-;8105:6;8113;8121;8129;8182:3;8170:9;8161:7;8157:23;8153:33;8150:53;;;8199:1;8196;8189:12;8150:53;8244:23;;;-1:-1:-1;8364:2:104;8349:18;;8336:32;;-1:-1:-1;8446:2:104;8431:18;;8418:32;8459:33;8418:32;8459:33;:::i;:::-;8019:608;;;;-1:-1:-1;8511:7:104;;8591:2;8576:18;8563:32;;-1:-1:-1;;8019:608:104:o;8632:184::-;8684:77;8681:1;8674:88;8781:4;8778:1;8771:15;8805:4;8802:1;8795:15;8821:375;8909:1;8927:5;8941:249;8962:1;8952:8;8949:15;8941:249;;;9012:4;9007:3;9003:14;8997:4;8994:24;8991:50;;;9021:18;;:::i;:::-;9071:1;9061:8;9057:16;9054:49;;;9085:16;;;;9054:49;9168:1;9164:16;;;;;9124:15;;8941:249;;;8821:375;;;;;;:::o;9201:1027::-;9255:5;9285:8;9275:80;;-1:-1:-1;9326:1:104;9340:5;;9275:80;9374:4;9364:76;;-1:-1:-1;9411:1:104;9425:5;;9364:76;9456:4;9474:1;9469:59;;;;9542:1;9537:174;;;;9449:262;;9469:59;9499:1;9490:10;;9513:5;;;9537:174;9574:3;9564:8;9561:17;9558:43;;;9581:18;;:::i;:::-;-1:-1:-1;;9637:1:104;9623:16;;9696:5;;9449:262;;9795:2;9785:8;9782:16;9776:3;9770:4;9767:13;9763:36;9757:2;9747:8;9744:16;9739:2;9733:4;9730:12;9726:35;9723:77;9720:203;;;-1:-1:-1;9832:19:104;;;9908:5;;9720:203;9955:102;9990:66;9980:8;9974:4;9955:102;:::i;:::-;10153:6;10085:66;10081:79;10072:7;10069:92;10066:118;;;10164:18;;:::i;:::-;10202:20;;9201:1027;-1:-1:-1;;;9201:1027:104:o;10233:942::-;10282:5;10312:8;10302:80;;-1:-1:-1;10353:1:104;10367:5;;10302:80;10401:4;10391:76;;-1:-1:-1;10438:1:104;10452:5;;10391:76;10483:4;10501:1;10496:59;;;;10569:1;10564:190;;10476:278;10564:190;10601:3;10591:8;10588:17;10585:43;;;10608:18;;:::i;:::-;10664:1;10654:8;10650:16;10641:25;;10692:10;10685:5;10682:21;10679:47;;;10706:18;;:::i;:::-;10739:5;;;10476:278;;10838:2;10828:8;10825:16;10819:3;10813:4;10810:13;10806:36;10800:2;10790:8;10787:16;10782:2;10776:4;10773:12;10769:35;10766:77;10763:219;;;-1:-1:-1;10875:19:104;;;10920:10;10910:21;;10907:47;;;10934:18;;:::i;:::-;10967:5;;10763:219;11014:46;11049:10;11039:8;11033:4;11014:46;:::i;:::-;11100:6;11088:10;11084:23;11075:7;11072:36;11069:62;;;11111:18;;:::i;11180:152::-;11239:5;11268:58;11314:10;11304:8;11300:25;11294:4;11268:58;:::i;11642:256::-;11738:6;11791:2;11779:9;11770:7;11766:23;11762:32;11759:52;;;11807:1;11804;11797:12;11759:52;-1:-1:-1;11852:16:104;;11642:256;-1:-1:-1;11642:256:104:o;11903:184::-;11955:77;11952:1;11945:88;12052:4;12049:1;12042:15;12076:4;12073:1;12066:15;12092:184;12144:77;12141:1;12134:88;12241:4;12238:1;12231:15;12265:4;12262:1;12255:15;12281:168;12354:9;;;12385;;12402:15;;;12396:22;;12382:37;12372:71;;12423:18;;:::i;12454:184::-;12506:77;12503:1;12496:88;12603:4;12600:1;12593:15;12627:4;12624:1;12617:15;12643:120;12683:1;12709;12699:35;;12714:18;;:::i;:::-;-1:-1:-1;12748:9:104;;12643:120::o;12768:125::-;12833:9;;;12854:10;;;12851:36;;;12867:18;;:::i;14066:420::-;14119:3;14157:5;14151:12;14184:6;14179:3;14172:19;14216:4;14211:3;14207:14;14200:21;;14255:4;14248:5;14244:16;14278:1;14288:173;14302:6;14299:1;14296:13;14288:173;;;14363:13;;14351:26;;14406:4;14397:14;;;;14434:17;;;;14324:1;14317:9;14288:173;;;-1:-1:-1;14477:3:104;;14066:420;-1:-1:-1;;;;14066:420:104:o;14491:869::-;14774:2;14763:9;14756:21;14737:4;14800:56;14852:2;14841:9;14837:18;14829:6;14800:56;:::i;:::-;14904:9;14896:6;14892:22;14887:2;14876:9;14872:18;14865:50;14935:6;14970;14964:13;15001:6;14993;14986:22;15036:2;15028:6;15024:15;15017:22;;15074:2;15066:6;15062:15;15048:29;;15095:1;15105:186;15119:6;15116:1;15113:13;15105:186;;;15184:13;;15199:10;15180:30;15168:43;;15240:2;15266:15;;;;15231:12;;;;15141:1;15134:9;15105:186;;;-1:-1:-1;;15342:2:104;15327:18;;;;15320:34;;;;-1:-1:-1;15308:3:104;14491:869;-1:-1:-1;;;14491:869:104:o;15365:245::-;15403:3;15447:10;15440:5;15436:22;15477:7;15467:41;;15488:18;;:::i;:::-;15537:66;15524:80;;15365:245;-1:-1:-1;;15365:245:104:o;16080:650::-;16315:2;16304:9;16297:21;16354:6;16349:2;16338:9;16334:18;16327:34;16411:6;16403;16398:2;16387:9;16383:18;16370:48;16467:1;16462:2;16453:6;16442:9;16438:22;16434:31;16427:42;16278:4;16524:66;16519:2;16511:6;16507:15;16503:88;16492:9;16488:104;16654:2;16642:9;16638:2;16634:18;16630:27;16623:4;16612:9;16608:20;16601:57;16675:49;16720:2;16716;16712:11;16704:6;16675:49;:::i;:::-;16667:57;16080:650;-1:-1:-1;;;;;;16080:650:104:o;16735:277::-;16802:6;16855:2;16843:9;16834:7;16830:23;16826:32;16823:52;;;16871:1;16868;16861:12;16823:52;16903:9;16897:16;16956:5;16949:13;16942:21;16935:5;16932:32;16922:60;;16978:1;16975;16968:12;17327:358;17427:6;17422:3;17415:19;17397:3;17457:66;17449:6;17446:78;17443:98;;;17537:1;17534;17527:12;17443:98;17573:6;17570:1;17566:14;17625:8;17618:5;17611:4;17606:3;17602:14;17589:45;17654:18;;;;17674:4;17650:29;;17327:358;-1:-1:-1;;;17327:358:104:o;17690:1105::-;18055:2;18044:9;18037:21;18018:4;18081:73;18150:2;18139:9;18135:18;18127:6;18119;18081:73;:::i;:::-;18190:22;;;18185:2;18170:18;;;18163:50;;;;18248:22;;;18324:6;;18286:15;18348:1;18358:300;18372:6;18369:1;18366:13;18358:300;;;18447:6;18434:20;18467:31;18492:5;18467:31;:::i;:::-;18534:42;18523:54;18511:67;;18607:2;18633:15;;;;18598:12;;;;18394:1;18387:9;18358:300;;;18362:3;18703:9;18698:3;18694:19;18689:2;18678:9;18674:18;18667:47;18731:58;18785:3;18777:6;18769;18731:58;:::i;:::-;18723:66;17690:1105;-1:-1:-1;;;;;;;;;;17690:1105:104:o;21119:163::-;21177:5;21206:70;21264:10;21254:8;21250:25;21237:10;21231:4;21227:21;21206:70;:::i;21287:170::-;21318:1;21352:10;21349:1;21345:18;21382:3;21372:37;;21389:18;;:::i;:::-;21447:3;21434:10;21431:1;21427:18;21423:28;21418:33;;;21287:170;;;;:::o;21462:178::-;21501:1;21535:10;21532:1;21528:18;21565:3;21555:37;;21572:18;;:::i;:::-;21630:3;21617:10;21614:1;21610:18;21606:28;21601:33;;;21462:178;;;;:::o;21645:167::-;21740:10;21713:18;;;21733;;;21709:43;;21764:19;;21761:45;;;21786:18;;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "70476": [
                {
                    "start": 1557,
                    "length": 32
                },
                {
                    "start": 2974,
                    "length": 32
                }
            ],
            "70479": [
                {
                    "start": 1608,
                    "length": 32
                },
                {
                    "start": 2668,
                    "length": 32
                },
                {
                    "start": 2736,
                    "length": 32
                },
                {
                    "start": 7528,
                    "length": 32
                },
                {
                    "start": 10618,
                    "length": 32
                },
                {
                    "start": 10740,
                    "length": 32
                }
            ],
            "71201": [
                {
                    "start": 2368,
                    "length": 32
                },
                {
                    "start": 5969,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "BASIS_POINTS()": "e1f1c4a7",
        "FIELD_SIZE()": "414a37ba",
        "HIGH_ANONYMITY_THRESHOLD()": "c3a2ade6",
        "LONG_WAIT_TIME()": "5580ee3a",
        "LOW_ANONYMITY_THRESHOLD()": "132d6275",
        "MAXIMUM_PERCENTAGE_FEE()": "dc79c2eb",
        "MAX_MERKLE_TREE_DEPTH()": "d0a1db84",
        "MEDIUM_ANONYMITY_THRESHOLD()": "5296bffd",
        "MEDIUM_POOL_THRESHOLD()": "37dbd120",
        "PERCENTAGE_MULTIPLIER()": "54111315",
        "PUBLIC_INPUTS_AMOUNTS_OFFSET()": "1d06a3cd",
        "PUBLIC_INPUTS_GROUP_SIZE()": "783e558f",
        "PUBLIC_INPUTS_SIZE()": "af28f7e8",
        "PUBLIC_INPUTS_TOKENS_OFFSET()": "f20d7495",
        "REVEAL_DELAY()": "a7bc4e30",
        "ROOT_HISTORY_SIZE()": "cd87a3b4",
        "SHORT_WAIT_TIME()": "145f9e2f",
        "SMALL_POOL_THRESHOLD()": "1ba15650",
        "ZERO_ELEMENT()": "871211df",
        "calculateFee(uint256)": "99a5d747",
        "commit(bytes32)": "f14fcbc8",
        "daoAddress()": "2131c68c",
        "deposit(bytes32)": "b214faa5",
        "fixedFee()": "91792d5b",
        "generateCommitment(address,uint256,uint256,uint256)": "7d57287a",
        "getAnonymityLevel()": "7d40f6d5",
        "getBalance(address)": "f8b2cb4f",
        "getFeeBreakdown(uint256)": "aac78c84",
        "getLatestRoot()": "5445b007",
        "getMaxPoolSize()": "0fbc8f5b",
        "getOptimalWithdrawTime()": "5e85407e",
        "getPoolSize()": "23845e4b",
        "getPoolStats()": "bbb85188",
        "getPoolUtilization()": "bf7d653b",
        "hashLeftRight(bytes32,bytes32)": "38bf282e",
        "i_depth()": "73d73202",
        "i_hasher()": "705f032f",
        "i_verifier()": "db9753a0",
        "isDepositValid(bytes32)": "50453f28",
        "isKnownRoot(bytes32)": "6d9833e3",
        "isPoolFull()": "093c87f3",
        "multiDeposit((address,uint256,bytes32)[])": "684d329c",
        "percentageFee()": "780a7ff0",
        "reveal(bytes32,bytes32,address,uint256)": "fa9b4689",
        "s_cachedSubtrees(uint256)": "ed7cf2df",
        "s_commitments(bytes32)": "9dc166b7",
        "s_currentRootIndex()": "57f65706",
        "s_nextLeafIndex()": "59f41a81",
        "s_nullifiers(bytes32)": "a20a941e",
        "s_pendingCommitments(bytes32)": "ee594ca4",
        "s_roots(uint256)": "9c8b91c1",
        "updateDAOAddress(address)": "d3f34ff1",
        "updateFees(uint256,uint256)": "6db79437",
        "withdraw(bytes,bytes32,bytes32[],address,address[],uint256[])": "a305c497",
        "zeros(uint256)": "e8295588"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract Poseidon2\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeDepth\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentageFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"IncrementalMerkleTree__IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"}],\"name\":\"IncrementalMerkleTree__LeftValueOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"depth\",\"type\":\"uint32\"}],\"name\":\"IncrementalMerkleTree__LevelsShouldBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"depth\",\"type\":\"uint32\"}],\"name\":\"IncrementalMerkleTree__LevelsShouldBeLessThan32\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nextIndex\",\"type\":\"uint32\"}],\"name\":\"IncrementalMerkleTree__MerkleTreeFull\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"IncrementalMerkleTree__RightValueOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"Mixer__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"Mixer__CommitmentAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"Mixer__DepositValueMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"Mixer__FeeExceedsDepositValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Mixer__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Mixer__InvalidWithdrawProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Mixer__NotDAO\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"Mixer__NoteAlreadySpent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mixer__PaymentFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAllowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provided\",\"type\":\"uint256\"}],\"name\":\"Mixer__PercentageFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"Mixer__UnknownRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CommitmentSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldDAO\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDAO\",\"type\":\"address\"}],\"name\":\"DAOUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentageFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fixedFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"commitments\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"leafIndices\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MultiDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SingleDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"nullifierHashes\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HIGH_ANONYMITY_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LONG_WAIT_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOW_ANONYMITY_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_PERCENTAGE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MERKLE_TREE_DEPTH\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEDIUM_ANONYMITY_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEDIUM_POOL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTAGE_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_INPUTS_AMOUNTS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_INPUTS_GROUP_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_INPUTS_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_INPUTS_TOKENS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVEAL_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHORT_WAIT_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMALL_POOL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_ELEMENT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitmentHash\",\"type\":\"bytes32\"}],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fixedFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_secret\",\"type\":\"uint256\"}],\"name\":\"generateCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAnonymityLevel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getFeeBreakdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"percentageFeeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fixedFeeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPoolSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOptimalWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"currentRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"currentPercentageFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentFixedFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_depth\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_hasher\",\"outputs\":[{\"internalType\":\"contract Poseidon2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"isDepositValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolFull\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"internalType\":\"struct ShadowPool.Deposit[]\",\"name\":\"_deposits\",\"type\":\"tuple[]\"}],\"name\":\"multiDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifier\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_secret\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_cachedSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"s_commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_nextLeafIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"s_nullifiers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"s_pendingCommitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDAOAddress\",\"type\":\"address\"}],\"name\":\"updateDAOAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentageFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedFee\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sergey Kerhet\",\"details\":\"Supports ETH and ERC20 tokens with dynamic fee mechanism and multi-deposit functionality.      Integrates with a Noir-generated verifier and supports a 20-level Merkle tree.      Governance is handled by DAO contract.\",\"errors\":{\"Mixer__ArrayLengthMismatch(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual length.\",\"expected\":\"The expected length.\"}}],\"Mixer__CommitmentAlreadyAdded(bytes32)\":[{\"params\":{\"commitment\":\"The hash of the commitment that has already been added.\"}}],\"Mixer__DepositValueMismatch(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual deposit value.\",\"expected\":\"The expected deposit value.\"}}],\"Mixer__FeeExceedsDepositValue(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual deposit value.\",\"expected\":\"The expected deposit value.\"}}],\"Mixer__NoteAlreadySpent(bytes32)\":[{\"params\":{\"nullifierHash\":\"The hash of the note that has already been used.\"}}],\"Mixer__PaymentFailed(address,uint256)\":[{\"params\":{\"amount\":\"The amount that was attempted to be sent.\",\"recipient\":\"The address of the payment recipient.\"}}],\"Mixer__PercentageFeeTooHigh(uint256,uint256)\":[{\"params\":{\"maxAllowed\":\"The maximum allowed percentage fee.\",\"provided\":\"The provided percentage fee.\"}}],\"Mixer__UnknownRoot(bytes32)\":[{\"params\":{\"root\":\"The unknown root.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateFee(uint256)\":{\"details\":\"Calculates the fee for a given deposit amount.\",\"params\":{\"_amount\":\"Deposit amount in wei.\"},\"returns\":{\"_0\":\"Total fee in wei.\"}},\"commit(bytes32)\":{\"details\":\"Commit phase - user commits to a deposit without revealing details\",\"params\":{\"_commitmentHash\":\"Hash of the commitment\"}},\"constructor\":{\"details\":\"Constructor to initialize the verifier, DAO address, and fee configuration.\",\"params\":{\"_daoAddress\":\"Address of the DAO contract.\",\"_fixedFee\":\"Initial fixed fee in wei.\",\"_hasher\":\"Address of the Poseidon2 hasher contract.\",\"_merkleTreeDepth\":\"Depth of the Merkle tree.\",\"_percentageFee\":\"Initial percentage fee in basis points (e.g., 50 = 0.5%).\",\"_verifier\":\"Address of the Noir verifier contract.\"}},\"deposit(bytes32)\":{\"details\":\"Legacy single deposit function for backward compatibility.\",\"params\":{\"_commitment\":\"Hash of the user's nullifier and secret.\"}},\"generateCommitment(address,uint256,uint256,uint256)\":{\"details\":\"Generate commitment hash\"},\"getAnonymityLevel()\":{\"details\":\"Returns the anonymity level based on pool size.\",\"returns\":{\"_0\":\"Anonymity level description.\"}},\"getBalance(address)\":{\"details\":\"Returns the current contract balance for a specific token.\",\"params\":{\"_token\":\"Token address (address(0) for ETH).\"},\"returns\":{\"_0\":\"Balance of the token.\"}},\"getFeeBreakdown(uint256)\":{\"details\":\"Returns detailed fee breakdown for a given amount.\",\"params\":{\"_amount\":\"Deposit amount in wei.\"},\"returns\":{\"fixedFeeAmount\":\"Fixed fee amount.\",\"percentageFeeAmount\":\"Percentage fee amount.\",\"totalFee\":\"Total fee amount.\"}},\"getLatestRoot()\":{\"returns\":{\"_0\":\"The current root value\"}},\"getMaxPoolSize()\":{\"details\":\"Returns the maximum number of deposits the pool can handle.\",\"returns\":{\"_0\":\"Maximum number of deposits.\"}},\"getOptimalWithdrawTime()\":{\"details\":\"Returns the recommended wait time for optimal anonymity.\",\"returns\":{\"_0\":\"Recommended wait time in seconds.\"}},\"getPoolSize()\":{\"details\":\"Returns the current number of deposits in the pool.\",\"returns\":{\"_0\":\"Number of deposits in the pool.\"}},\"getPoolStats()\":{\"details\":\"Returns pool statistics for transparency.\",\"returns\":{\"currentFixedFee\":\"Current fixed fee.\",\"currentPercentageFee\":\"Current percentage fee.\",\"currentRoot\":\"Current Merkle root.\",\"totalDeposits\":\"Number of total deposits.\"}},\"getPoolUtilization()\":{\"details\":\"Returns the pool utilization percentage.\",\"returns\":{\"_0\":\"Utilization percentage (0-100).\"}},\"hashLeftRight(bytes32,bytes32)\":{\"details\":\"Returns Poseidon(_left, _right)\",\"params\":{\"_left\":\"The left leaf value\",\"_right\":\"The right leaf value\"},\"returns\":{\"_0\":\"The hash of the two leaves\"}},\"isDepositValid(bytes32)\":{\"details\":\"Checks if a commitment exists in the pool.\",\"params\":{\"_commitment\":\"Commitment hash to check.\"},\"returns\":{\"_0\":\"True if commitment exists.\"}},\"isKnownRoot(bytes32)\":{\"params\":{\"_root\":\"The root to check\"},\"returns\":{\"_0\":\"True if the root is known, false otherwise\"}},\"isPoolFull()\":{\"details\":\"Returns whether the pool is full.\",\"returns\":{\"_0\":\"True if pool is full.\"}},\"multiDeposit((address,uint256,bytes32)[])\":{\"details\":\"Allows users to deposit multiple tokens (ETH and ERC20) with commitments. Each deposit has its own commitment computed off-chain as Poseidon2(nullifier, secret, token_address, amount).\",\"params\":{\"_deposits\":\"Array of deposit structures containing token, amount, and commitment.\"}},\"reveal(bytes32,bytes32,address,uint256)\":{\"details\":\"Reveal phase - user reveals deposit details after delay\",\"params\":{\"_amount\":\"Amount to deposit\",\"_nullifier\":\"User's nullifier\",\"_secret\":\"User's secret\",\"_token\":\"Token address (address(0) for ETH)\"}},\"updateDAOAddress(address)\":{\"details\":\"Updates the DAO address. Only callable by current DAO.\",\"params\":{\"_newDAOAddress\":\"New DAO address.\"}},\"updateFees(uint256,uint256)\":{\"details\":\"Updates the fee configuration. Only callable by DAO.\",\"params\":{\"_fixedFee\":\"New fixed fee in wei.\",\"_percentageFee\":\"New percentage fee in basis points.\"}},\"withdraw(bytes,bytes32,bytes32[],address,address[],uint256[])\":{\"details\":\"Withdraws funds using a Noir zk-proof for multi-currency deposits.\",\"params\":{\"_amounts\":\"Array of amounts to withdraw.\",\"_nullifierHashes\":\"Array of nullifier hashes to prevent double-spending.\",\"_proof\":\"Noir zk-proof (bytes format).\",\"_recipient\":\"Address to receive the withdrawn funds.\",\"_root\":\"Merkle root for verification (public input).\",\"_tokens\":\"Array of token addresses to withdraw.\"}},\"zeros(uint256)\":{\"params\":{\"i\":\"The depth of the subtree root to return\"},\"returns\":{\"_0\":\"The root of the given subtree\"}}},\"title\":\"ShadowPool\",\"version\":1},\"userdoc\":{\"errors\":{\"IncrementalMerkleTree__IndexOutOfBounds(uint256)\":[{\"notice\":\"Error: index out of bounds\"}],\"IncrementalMerkleTree__LeftValueOutOfRange(bytes32)\":[{\"notice\":\"Error: left value out of field range\"}],\"IncrementalMerkleTree__LevelsShouldBeGreaterThanZero(uint32)\":[{\"notice\":\"Error: tree depth must be greater than zero\"}],\"IncrementalMerkleTree__LevelsShouldBeLessThan32(uint32)\":[{\"notice\":\"Error: tree depth must be less than 32\"}],\"IncrementalMerkleTree__MerkleTreeFull(uint32)\":[{\"notice\":\"Error: Merkle tree is full\"}],\"IncrementalMerkleTree__RightValueOutOfRange(bytes32)\":[{\"notice\":\"Error: right value out of field range\"}],\"Mixer__ArrayLengthMismatch(uint256,uint256)\":[{\"notice\":\"Error that occurs when arrays have different lengths.\"}],\"Mixer__CommitmentAlreadyAdded(bytes32)\":[{\"notice\":\"Error that occurs when attempting to add an already existing commitment.\"}],\"Mixer__DepositValueMismatch(uint256,uint256)\":[{\"notice\":\"Error that occurs when the expected and actual deposit values do not match.\"}],\"Mixer__FeeExceedsDepositValue(uint256,uint256)\":[{\"notice\":\"Error that occurs when the fee exceeds the deposit value.\"}],\"Mixer__InvalidAddress()\":[{\"notice\":\"Error that occurs when invalid address is provided.\"}],\"Mixer__InvalidWithdrawProof()\":[{\"notice\":\"Error that occurs when an invalid withdrawal proof is provided.\"}],\"Mixer__NotDAO()\":[{\"notice\":\"Error that occurs when caller is not the DAO.\"}],\"Mixer__NoteAlreadySpent(bytes32)\":[{\"notice\":\"Error that occurs when trying to reuse an already spent note.\"}],\"Mixer__PaymentFailed(address,uint256)\":[{\"notice\":\"Error that occurs when a payment attempt fails.\"}],\"Mixer__PercentageFeeTooHigh(uint256,uint256)\":[{\"notice\":\"Error that occurs when percentage fee exceeds maximum allowed.\"}],\"Mixer__UnknownRoot(bytes32)\":[{\"notice\":\"Error that occurs when an unknown root is used.\"}]},\"events\":{\"CommitmentSubmitted(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted when a commitment is submitted\"},\"DAOUpdated(address,address)\":{\"notice\":\"Emitted when DAO address is updated\"},\"FeeCollected(address,uint256)\":{\"notice\":\"Emitted when a fee is collected\"},\"FeeUpdated(uint256,uint256)\":{\"notice\":\"Emitted when fee parameters are updated\"},\"MultiDeposit(bytes32[],uint32[],uint256)\":{\"notice\":\"Emitted when multiple deposits are made in one transaction\"},\"SingleDeposit(bytes32,uint32,uint256)\":{\"notice\":\"Emitted when a single deposit is made\"},\"Withdrawal(address,bytes32[],address[],uint256[])\":{\"notice\":\"Emitted when a withdrawal is performed\"}},\"kind\":\"user\",\"methods\":{\"BASIS_POINTS()\":{\"notice\":\"Number of basis points in 100%\"},\"FIELD_SIZE()\":{\"notice\":\"Field size for the Merkle tree (BN254 curve prime)\"},\"LOW_ANONYMITY_THRESHOLD()\":{\"notice\":\"Thresholds for anonymity levels (number of deposits)\"},\"MAXIMUM_PERCENTAGE_FEE()\":{\"notice\":\"Maximum allowed percentage fee (in basis points)\"},\"MAX_MERKLE_TREE_DEPTH()\":{\"notice\":\"Maximum depth for Merkle tree (0-31)\"},\"PERCENTAGE_MULTIPLIER()\":{\"notice\":\"Multiplier for percentage calculations\"},\"PUBLIC_INPUTS_AMOUNTS_OFFSET()\":{\"notice\":\"Offset for amounts in public inputs\"},\"PUBLIC_INPUTS_GROUP_SIZE()\":{\"notice\":\"Group size for public inputs (nullifiers, tokens, amounts)\"},\"PUBLIC_INPUTS_SIZE()\":{\"notice\":\"Public inputs array size for Noir verification\"},\"PUBLIC_INPUTS_TOKENS_OFFSET()\":{\"notice\":\"Offset for tokens in public inputs\"},\"REVEAL_DELAY()\":{\"notice\":\"Minimum delay for reveal phase (in seconds)\"},\"ROOT_HISTORY_SIZE()\":{\"notice\":\"Number of roots stored to compare proofs against\"},\"SHORT_WAIT_TIME()\":{\"notice\":\"Wait time thresholds (in seconds)\"},\"ZERO_ELEMENT()\":{\"notice\":\"The \\\"zero\\\" element used to fill empty nodes in the Merkle tree\"},\"daoAddress()\":{\"notice\":\"Address of the DAO contract\"},\"fixedFee()\":{\"notice\":\"Fixed fee in wei\"},\"getLatestRoot()\":{\"notice\":\"Returns the latest root of the Merkle tree\"},\"hashLeftRight(bytes32,bytes32)\":{\"notice\":\"Hash two tree leaves using Poseidon2\"},\"i_depth()\":{\"notice\":\"The depth of the Merkle tree (number of levels)\"},\"i_hasher()\":{\"notice\":\"Instance of the contract which has the Poseidon hash logic\"},\"i_verifier()\":{\"notice\":\"Address of the Noir verifier contract\"},\"isKnownRoot(bytes32)\":{\"notice\":\"Check whether the root is present in the root history\"},\"percentageFee()\":{\"notice\":\"Fee as percentage (basis points, e.g., 50 = 0.5%)\"},\"s_cachedSubtrees(uint256)\":{\"notice\":\"Mapping for cached subtrees (for efficient updates)\"},\"s_commitments(bytes32)\":{\"notice\":\"Mapping to track commitments and ensure uniqueness\"},\"s_currentRootIndex()\":{\"notice\":\"Index in ROOT_HISTORY_SIZE where the current root is stored\"},\"s_nextLeafIndex()\":{\"notice\":\"Index of the next leaf to be inserted into the tree\"},\"s_nullifiers(bytes32)\":{\"notice\":\"Mapping to track used nullifiers and prevent double-spending\"},\"s_pendingCommitments(bytes32)\":{\"notice\":\"Mapping to track pending commitments (commitment => timestamp)\"},\"s_roots(uint256)\":{\"notice\":\"Mapping for Merkle tree roots (history)\"},\"zeros(uint256)\":{\"notice\":\"Returns the root of a subtree at the given depth\"}},\"notice\":\"Multi-currency mixer contract for anonymous transactions using Noir zk-proofs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ShadowPool.sol\":\"ShadowPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/poseidon2-evm/lib/forge-std/src/\",\":foundry-huff/=lib/poseidon2-evm/lib/foundry-huff/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":huffmate/=lib/poseidon2-evm/lib/huffmate/src/\",\":layerzero-examples/=lib/layerzero-examples/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":poseidon2-evm/=lib/poseidon2-evm/src/\",\":solidity-stringutils/=lib/poseidon2-evm/lib/foundry-huff/lib/solidity-stringutils/\",\":solmate/=lib/poseidon2-evm/lib/huffmate/lib/solmate/src/\",\":stringutils/=lib/poseidon2-evm/lib/foundry-huff/lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/poseidon2-evm/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/poseidon2-evm/src/Field.sol\":{\"keccak256\":\"0x3895008a01dd946fd1a7a6d5d78888a8a5bf7880760420ac969cf6c65dbbdb05\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f9d834dc39158217c04d37edf654a66b7cec5a76b330a0d8977f037cc36d46fb\",\"dweb:/ipfs/QmbKuyGsq8wYe5kRDguxFYXPCVEuTcXPmBNWEzveBJMvy5\"]},\"lib/poseidon2-evm/src/Poseidon2.sol\":{\"keccak256\":\"0x92037e7d6e7901b22a951f9ff983722c2445eee24d94fa552e6a99ba5635f78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893a30dfd9985e32fc8278039b045de5c4ecb4604fee583c131a68014522512\",\"dweb:/ipfs/QmUVEYqEcbtymDEz1A5EZPpyrxJLxBxSQPjqrbcdARPWHw\"]},\"lib/poseidon2-evm/src/Poseidon2Lib.sol\":{\"keccak256\":\"0x5f815549129d7bc64fd1f1b7770b30215c59f862e9e48f00f66c06e5fcc4d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d80e720670ddd63e0f1a2ee433e4c9e2d2d3d154fe9561c524f0e17525ea717f\",\"dweb:/ipfs/QmXaWHpBvQcrddQ69cj8bWpzrJSoeAbRrasD33md8q9BVR\"]},\"src/Incremental.sol\":{\"keccak256\":\"0xc65abf71eac79231ef8552a63399330bf333ddcc014019ad841c35f50b11c5a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28ed3f112ec23e7159b8fabcc9ac80039cf10d5478331f68aeeabc943a850528\",\"dweb:/ipfs/Qmdoqo1CvMqMfuy637iPESyUm8GZ3Lv5caDkrXVQ34h53U\"]},\"src/ShadowPool.sol\":{\"keccak256\":\"0x62d37af74c8e778f663e3813aeab36cb14a8375afe50e14079546b90bb08cae3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://384f46f858c7a8cba8b3d11cc6b573f09da08ca81f8c1f5474d7a0cb9eb84597\",\"dweb:/ipfs/QmcwWQePrNBmhP5qvnz7XrrLqZR7ozU4dZ3361WCBzEPpz\"]},\"src/Verifier/Verifier.sol\":{\"keccak256\":\"0x4e2ec888c1212a84bf3f3984642a6e97b4c86e0d4527d4a7c4c98235b1001cbc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f231f3ae29679522ee6cd54fc25eae5ad35c7c312b7309c7bc638ce13723a911\",\"dweb:/ipfs/QmUGGyxf6zS4feWpLjRALTkh2vbYXttwWeDNYLr5Dmxnx5\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.30+commit.73712a01"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IVerifier",
                            "name": "_verifier",
                            "type": "address"
                        },
                        {
                            "internalType": "contract Poseidon2",
                            "name": "_hasher",
                            "type": "address"
                        },
                        {
                            "internalType": "uint32",
                            "name": "_merkleTreeDepth",
                            "type": "uint32"
                        },
                        {
                            "internalType": "address",
                            "name": "_daoAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_percentageFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_fixedFee",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "index",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__IndexOutOfBounds"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "left",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__LeftValueOutOfRange"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "depth",
                            "type": "uint32"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__LevelsShouldBeGreaterThanZero"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "depth",
                            "type": "uint32"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__LevelsShouldBeLessThan32"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "nextIndex",
                            "type": "uint32"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__MerkleTreeFull"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "right",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "IncrementalMerkleTree__RightValueOutOfRange"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__ArrayLengthMismatch"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "commitment",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__CommitmentAlreadyAdded"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__DepositValueMismatch"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "expected",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "actual",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__FeeExceedsDepositValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Mixer__InvalidAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Mixer__InvalidWithdrawProof"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Mixer__NotDAO"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "nullifierHash",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__NoteAlreadySpent"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__PaymentFailed"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "maxAllowed",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "provided",
                            "type": "uint256"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__PercentageFeeTooHigh"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "root",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "Mixer__UnknownRoot"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ReentrancyGuardReentrantCall"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "commitment",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "timestamp",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CommitmentSubmitted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "oldDAO",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newDAO",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "DAOUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "FeeCollected",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "percentageFee",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "fixedFee",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "FeeUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "commitments",
                            "type": "bytes32[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint32[]",
                            "name": "leafIndices",
                            "type": "uint32[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "timestamp",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MultiDeposit",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "commitment",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "leafIndex",
                            "type": "uint32",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "timestamp",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SingleDeposit",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "nullifierHashes",
                            "type": "bytes32[]",
                            "indexed": false
                        },
                        {
                            "internalType": "address[]",
                            "name": "tokens",
                            "type": "address[]",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "amounts",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Withdrawal",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "BASIS_POINTS",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "FIELD_SIZE",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "HIGH_ANONYMITY_THRESHOLD",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "LONG_WAIT_TIME",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "LOW_ANONYMITY_THRESHOLD",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAXIMUM_PERCENTAGE_FEE",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MAX_MERKLE_TREE_DEPTH",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MEDIUM_ANONYMITY_THRESHOLD",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "MEDIUM_POOL_THRESHOLD",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PERCENTAGE_MULTIPLIER",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PUBLIC_INPUTS_AMOUNTS_OFFSET",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PUBLIC_INPUTS_GROUP_SIZE",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PUBLIC_INPUTS_SIZE",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PUBLIC_INPUTS_TOKENS_OFFSET",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "REVEAL_DELAY",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ROOT_HISTORY_SIZE",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "SHORT_WAIT_TIME",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "SMALL_POOL_THRESHOLD",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ZERO_ELEMENT",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "calculateFee",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_commitmentHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "commit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "daoAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_commitment",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "deposit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "fixedFee",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_nullifier",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_secret",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "generateCommitment",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getAnonymityLevel",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_token",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getBalance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getFeeBreakdown",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "percentageFeeAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "fixedFeeAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "totalFee",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getLatestRoot",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getMaxPoolSize",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getOptimalWithdrawTime",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPoolSize",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPoolStats",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "totalDeposits",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "currentRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "currentPercentageFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "currentFixedFee",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getPoolUtilization",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_left",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_right",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hashLeftRight",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "i_depth",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "i_hasher",
                    "outputs": [
                        {
                            "internalType": "contract Poseidon2",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "i_verifier",
                    "outputs": [
                        {
                            "internalType": "contract IVerifier",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_commitment",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isDepositValid",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_root",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isKnownRoot",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isPoolFull",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ShadowPool.Deposit[]",
                            "name": "_deposits",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "commitment",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiDeposit"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "percentageFee",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_nullifier",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_secret",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "_token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "reveal"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_cachedSubtrees",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_commitments",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_currentRootIndex",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_nextLeafIndex",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_nullifiers",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_pendingCommitments",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "s_roots",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_newDAOAddress",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateDAOAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_percentageFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_fixedFee",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateFees"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "_proof",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_root",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "_nullifierHashes",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "address payable",
                            "name": "_recipient",
                            "type": "address"
                        },
                        {
                            "internalType": "address[]",
                            "name": "_tokens",
                            "type": "address[]"
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "_amounts",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "withdraw"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "i",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "zeros",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "calculateFee(uint256)": {
                        "details": "Calculates the fee for a given deposit amount.",
                        "params": {
                            "_amount": "Deposit amount in wei."
                        },
                        "returns": {
                            "_0": "Total fee in wei."
                        }
                    },
                    "commit(bytes32)": {
                        "details": "Commit phase - user commits to a deposit without revealing details",
                        "params": {
                            "_commitmentHash": "Hash of the commitment"
                        }
                    },
                    "constructor": {
                        "details": "Constructor to initialize the verifier, DAO address, and fee configuration.",
                        "params": {
                            "_daoAddress": "Address of the DAO contract.",
                            "_fixedFee": "Initial fixed fee in wei.",
                            "_hasher": "Address of the Poseidon2 hasher contract.",
                            "_merkleTreeDepth": "Depth of the Merkle tree.",
                            "_percentageFee": "Initial percentage fee in basis points (e.g., 50 = 0.5%).",
                            "_verifier": "Address of the Noir verifier contract."
                        }
                    },
                    "deposit(bytes32)": {
                        "details": "Legacy single deposit function for backward compatibility.",
                        "params": {
                            "_commitment": "Hash of the user's nullifier and secret."
                        }
                    },
                    "generateCommitment(address,uint256,uint256,uint256)": {
                        "details": "Generate commitment hash"
                    },
                    "getAnonymityLevel()": {
                        "details": "Returns the anonymity level based on pool size.",
                        "returns": {
                            "_0": "Anonymity level description."
                        }
                    },
                    "getBalance(address)": {
                        "details": "Returns the current contract balance for a specific token.",
                        "params": {
                            "_token": "Token address (address(0) for ETH)."
                        },
                        "returns": {
                            "_0": "Balance of the token."
                        }
                    },
                    "getFeeBreakdown(uint256)": {
                        "details": "Returns detailed fee breakdown for a given amount.",
                        "params": {
                            "_amount": "Deposit amount in wei."
                        },
                        "returns": {
                            "fixedFeeAmount": "Fixed fee amount.",
                            "percentageFeeAmount": "Percentage fee amount.",
                            "totalFee": "Total fee amount."
                        }
                    },
                    "getLatestRoot()": {
                        "returns": {
                            "_0": "The current root value"
                        }
                    },
                    "getMaxPoolSize()": {
                        "details": "Returns the maximum number of deposits the pool can handle.",
                        "returns": {
                            "_0": "Maximum number of deposits."
                        }
                    },
                    "getOptimalWithdrawTime()": {
                        "details": "Returns the recommended wait time for optimal anonymity.",
                        "returns": {
                            "_0": "Recommended wait time in seconds."
                        }
                    },
                    "getPoolSize()": {
                        "details": "Returns the current number of deposits in the pool.",
                        "returns": {
                            "_0": "Number of deposits in the pool."
                        }
                    },
                    "getPoolStats()": {
                        "details": "Returns pool statistics for transparency.",
                        "returns": {
                            "currentFixedFee": "Current fixed fee.",
                            "currentPercentageFee": "Current percentage fee.",
                            "currentRoot": "Current Merkle root.",
                            "totalDeposits": "Number of total deposits."
                        }
                    },
                    "getPoolUtilization()": {
                        "details": "Returns the pool utilization percentage.",
                        "returns": {
                            "_0": "Utilization percentage (0-100)."
                        }
                    },
                    "hashLeftRight(bytes32,bytes32)": {
                        "details": "Returns Poseidon(_left, _right)",
                        "params": {
                            "_left": "The left leaf value",
                            "_right": "The right leaf value"
                        },
                        "returns": {
                            "_0": "The hash of the two leaves"
                        }
                    },
                    "isDepositValid(bytes32)": {
                        "details": "Checks if a commitment exists in the pool.",
                        "params": {
                            "_commitment": "Commitment hash to check."
                        },
                        "returns": {
                            "_0": "True if commitment exists."
                        }
                    },
                    "isKnownRoot(bytes32)": {
                        "params": {
                            "_root": "The root to check"
                        },
                        "returns": {
                            "_0": "True if the root is known, false otherwise"
                        }
                    },
                    "isPoolFull()": {
                        "details": "Returns whether the pool is full.",
                        "returns": {
                            "_0": "True if pool is full."
                        }
                    },
                    "multiDeposit((address,uint256,bytes32)[])": {
                        "details": "Allows users to deposit multiple tokens (ETH and ERC20) with commitments. Each deposit has its own commitment computed off-chain as Poseidon2(nullifier, secret, token_address, amount).",
                        "params": {
                            "_deposits": "Array of deposit structures containing token, amount, and commitment."
                        }
                    },
                    "reveal(bytes32,bytes32,address,uint256)": {
                        "details": "Reveal phase - user reveals deposit details after delay",
                        "params": {
                            "_amount": "Amount to deposit",
                            "_nullifier": "User's nullifier",
                            "_secret": "User's secret",
                            "_token": "Token address (address(0) for ETH)"
                        }
                    },
                    "updateDAOAddress(address)": {
                        "details": "Updates the DAO address. Only callable by current DAO.",
                        "params": {
                            "_newDAOAddress": "New DAO address."
                        }
                    },
                    "updateFees(uint256,uint256)": {
                        "details": "Updates the fee configuration. Only callable by DAO.",
                        "params": {
                            "_fixedFee": "New fixed fee in wei.",
                            "_percentageFee": "New percentage fee in basis points."
                        }
                    },
                    "withdraw(bytes,bytes32,bytes32[],address,address[],uint256[])": {
                        "details": "Withdraws funds using a Noir zk-proof for multi-currency deposits.",
                        "params": {
                            "_amounts": "Array of amounts to withdraw.",
                            "_nullifierHashes": "Array of nullifier hashes to prevent double-spending.",
                            "_proof": "Noir zk-proof (bytes format).",
                            "_recipient": "Address to receive the withdrawn funds.",
                            "_root": "Merkle root for verification (public input).",
                            "_tokens": "Array of token addresses to withdraw."
                        }
                    },
                    "zeros(uint256)": {
                        "params": {
                            "i": "The depth of the subtree root to return"
                        },
                        "returns": {
                            "_0": "The root of the given subtree"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "BASIS_POINTS()": {
                        "notice": "Number of basis points in 100%"
                    },
                    "FIELD_SIZE()": {
                        "notice": "Field size for the Merkle tree (BN254 curve prime)"
                    },
                    "LOW_ANONYMITY_THRESHOLD()": {
                        "notice": "Thresholds for anonymity levels (number of deposits)"
                    },
                    "MAXIMUM_PERCENTAGE_FEE()": {
                        "notice": "Maximum allowed percentage fee (in basis points)"
                    },
                    "MAX_MERKLE_TREE_DEPTH()": {
                        "notice": "Maximum depth for Merkle tree (0-31)"
                    },
                    "PERCENTAGE_MULTIPLIER()": {
                        "notice": "Multiplier for percentage calculations"
                    },
                    "PUBLIC_INPUTS_AMOUNTS_OFFSET()": {
                        "notice": "Offset for amounts in public inputs"
                    },
                    "PUBLIC_INPUTS_GROUP_SIZE()": {
                        "notice": "Group size for public inputs (nullifiers, tokens, amounts)"
                    },
                    "PUBLIC_INPUTS_SIZE()": {
                        "notice": "Public inputs array size for Noir verification"
                    },
                    "PUBLIC_INPUTS_TOKENS_OFFSET()": {
                        "notice": "Offset for tokens in public inputs"
                    },
                    "REVEAL_DELAY()": {
                        "notice": "Minimum delay for reveal phase (in seconds)"
                    },
                    "ROOT_HISTORY_SIZE()": {
                        "notice": "Number of roots stored to compare proofs against"
                    },
                    "SHORT_WAIT_TIME()": {
                        "notice": "Wait time thresholds (in seconds)"
                    },
                    "ZERO_ELEMENT()": {
                        "notice": "The \"zero\" element used to fill empty nodes in the Merkle tree"
                    },
                    "daoAddress()": {
                        "notice": "Address of the DAO contract"
                    },
                    "fixedFee()": {
                        "notice": "Fixed fee in wei"
                    },
                    "getLatestRoot()": {
                        "notice": "Returns the latest root of the Merkle tree"
                    },
                    "hashLeftRight(bytes32,bytes32)": {
                        "notice": "Hash two tree leaves using Poseidon2"
                    },
                    "i_depth()": {
                        "notice": "The depth of the Merkle tree (number of levels)"
                    },
                    "i_hasher()": {
                        "notice": "Instance of the contract which has the Poseidon hash logic"
                    },
                    "i_verifier()": {
                        "notice": "Address of the Noir verifier contract"
                    },
                    "isKnownRoot(bytes32)": {
                        "notice": "Check whether the root is present in the root history"
                    },
                    "percentageFee()": {
                        "notice": "Fee as percentage (basis points, e.g., 50 = 0.5%)"
                    },
                    "s_cachedSubtrees(uint256)": {
                        "notice": "Mapping for cached subtrees (for efficient updates)"
                    },
                    "s_commitments(bytes32)": {
                        "notice": "Mapping to track commitments and ensure uniqueness"
                    },
                    "s_currentRootIndex()": {
                        "notice": "Index in ROOT_HISTORY_SIZE where the current root is stored"
                    },
                    "s_nextLeafIndex()": {
                        "notice": "Index of the next leaf to be inserted into the tree"
                    },
                    "s_nullifiers(bytes32)": {
                        "notice": "Mapping to track used nullifiers and prevent double-spending"
                    },
                    "s_pendingCommitments(bytes32)": {
                        "notice": "Mapping to track pending commitments (commitment => timestamp)"
                    },
                    "s_roots(uint256)": {
                        "notice": "Mapping for Merkle tree roots (history)"
                    },
                    "zeros(uint256)": {
                        "notice": "Returns the root of a subtree at the given depth"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/poseidon2-evm/lib/forge-std/src/",
                "foundry-huff/=lib/poseidon2-evm/lib/foundry-huff/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "huffmate/=lib/poseidon2-evm/lib/huffmate/src/",
                "layerzero-examples/=lib/layerzero-examples/contracts/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "poseidon2-evm/=lib/poseidon2-evm/src/",
                "solidity-stringutils/=lib/poseidon2-evm/lib/foundry-huff/lib/solidity-stringutils/",
                "solmate/=lib/poseidon2-evm/lib/huffmate/lib/solmate/src/",
                "stringutils/=lib/poseidon2-evm/lib/foundry-huff/lib/solidity-stringutils/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 50000
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/ShadowPool.sol": "ShadowPool"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
                "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
                "urls": [
                    "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
                    "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
                "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
                "urls": [
                    "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
                    "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
                "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
                "urls": [
                    "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
                    "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
                "urls": [
                    "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
                    "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310",
                "urls": [
                    "bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862",
                    "dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
                "urls": [
                    "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
                    "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
                "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
                "urls": [
                    "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
                    "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
                "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
                "urls": [
                    "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
                    "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
                "urls": [
                    "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
                    "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
                ],
                "license": "MIT"
            },
            "lib/poseidon2-evm/lib/forge-std/src/console.sol": {
                "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
                "urls": [
                    "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
                    "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
                ],
                "license": "MIT"
            },
            "lib/poseidon2-evm/src/Field.sol": {
                "keccak256": "0x3895008a01dd946fd1a7a6d5d78888a8a5bf7880760420ac969cf6c65dbbdb05",
                "urls": [
                    "bzz-raw://f9d834dc39158217c04d37edf654a66b7cec5a76b330a0d8977f037cc36d46fb",
                    "dweb:/ipfs/QmbKuyGsq8wYe5kRDguxFYXPCVEuTcXPmBNWEzveBJMvy5"
                ],
                "license": "UNLICENSED"
            },
            "lib/poseidon2-evm/src/Poseidon2.sol": {
                "keccak256": "0x92037e7d6e7901b22a951f9ff983722c2445eee24d94fa552e6a99ba5635f78e",
                "urls": [
                    "bzz-raw://f893a30dfd9985e32fc8278039b045de5c4ecb4604fee583c131a68014522512",
                    "dweb:/ipfs/QmUVEYqEcbtymDEz1A5EZPpyrxJLxBxSQPjqrbcdARPWHw"
                ],
                "license": "MIT"
            },
            "lib/poseidon2-evm/src/Poseidon2Lib.sol": {
                "keccak256": "0x5f815549129d7bc64fd1f1b7770b30215c59f862e9e48f00f66c06e5fcc4d835",
                "urls": [
                    "bzz-raw://d80e720670ddd63e0f1a2ee433e4c9e2d2d3d154fe9561c524f0e17525ea717f",
                    "dweb:/ipfs/QmXaWHpBvQcrddQ69cj8bWpzrJSoeAbRrasD33md8q9BVR"
                ],
                "license": "MIT"
            },
            "src/Incremental.sol": {
                "keccak256": "0xc65abf71eac79231ef8552a63399330bf333ddcc014019ad841c35f50b11c5a0",
                "urls": [
                    "bzz-raw://28ed3f112ec23e7159b8fabcc9ac80039cf10d5478331f68aeeabc943a850528",
                    "dweb:/ipfs/Qmdoqo1CvMqMfuy637iPESyUm8GZ3Lv5caDkrXVQ34h53U"
                ],
                "license": "MIT"
            },
            "src/ShadowPool.sol": {
                "keccak256": "0x62d37af74c8e778f663e3813aeab36cb14a8375afe50e14079546b90bb08cae3",
                "urls": [
                    "bzz-raw://384f46f858c7a8cba8b3d11cc6b573f09da08ca81f8c1f5474d7a0cb9eb84597",
                    "dweb:/ipfs/QmcwWQePrNBmhP5qvnz7XrrLqZR7ozU4dZ3361WCBzEPpz"
                ],
                "license": "MIT"
            },
            "src/Verifier/Verifier.sol": {
                "keccak256": "0x4e2ec888c1212a84bf3f3984642a6e97b4c86e0d4527d4a7c4c98235b1001cbc",
                "urls": [
                    "bzz-raw://f231f3ae29679522ee6cd54fc25eae5ad35c7c312b7309c7bc638ce13723a911",
                    "dweb:/ipfs/QmUGGyxf6zS4feWpLjRALTkh2vbYXttwWeDNYLr5Dmxnx5"
                ],
                "license": "Apache-2.0"
            }
        },
        "version": 1
    },
    "id": 85
}